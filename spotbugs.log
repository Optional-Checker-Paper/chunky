Warning: failed to run 'git' (args: [describe, --abbrev=7, --long])
fatal: No names found, cannot describe anything.

Building version 2.5.0-DEV.0
Project :chunky => no module-info.java found
Project :launcher => no module-info.java found
Project :lib => no module-info.java found
Project :releasetools => no module-info.java found
:lib:compileJava
Note: //chunky/lib/src/se/llbit/chunky/ui/Adjuster.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
:lib:processResources NO-SOURCE
:lib:classes
:lib:jar
:chunky:compileJava
//chunky/chunky/src/java/se/llbit/chunky/ui/controller/ChunkyFxController.java:385: warning: [deprecation] saveScene() in AsynchronousSceneManager has been deprecated
    saveScene.setOnAction(e -> asyncSceneManager.saveScene());
                                                ^
//chunky/chunky/src/java/se/llbit/chunky/ui/controller/ChunkyFxController.java:405: warning: [deprecation] resolveSceneDirectory(String) in SynchronousSceneManager has been deprecated
        File sceneDirectory = SynchronousSceneManager.resolveSceneDirectory(newName);
                                                     ^
//chunky/chunky/src/java/se/llbit/chunky/world/ChunkSelectionTracker.java:336: warning: [deprecation] get(int,int) in ChunkPosition has been deprecated
          selectionChanged |= setChunk(dimension, ChunkPosition.get(chunkX, chunkZ), selected);
                                                               ^
//chunky/chunky/src/java/se/llbit/chunky/plugin/ChunkyPlugin.java:89: warning: [deprecation] newInstance() in Class has been deprecated
        Plugin plugin = (Plugin) pluginClass.newInstance();
                                            ^
  where T is a type-variable:
    T extends Object declared in class Class
//chunky/chunky/src/java/se/llbit/chunky/ui/render/tabs/PostprocessingTab.java:99: warning: [deprecation] getPostProcessingFilterFromName(String) in PostProcessingFilters has been deprecated
        return PostProcessingFilters.getPostProcessingFilterFromName(string).orElse(Scene.DEFAULT_POSTPROCESSING_FILTER);
                                    ^
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
5 warnings
:chunky:updateVersionString
:chunky:processResources
:chunky:classes
:chunky:spotbugsMain
:launcher:compileJava
Note: //chunky/launcher/src/se/llbit/chunky/launcher/JavaFxInstaller.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
:launcher:processResources
:launcher:classes
:launcher:spotbugsMain
:lib:spotbugsMain
:releasetools:compileJava
:releasetools:processResources NO-SOURCE
:releasetools:classes
:releasetools:spotbugsMain
M D NP: Possible null pointer dereference in releasetools.ReleaseBuilder.buildVersionInfo(String, String) due to return value of called method  Dereferenced at ReleaseBuilder.java:[line 141]
H I Dm: Found reliance on default encoding in releasetools.ReleaseBuilder.readReleaseNotes(String): new java.util.Scanner(InputStream)  At ReleaseBuilder.java:[line 74]
H I Dm: Found reliance on default encoding in releasetools.ReleaseBuilder.readChangeLog(String): new java.util.Scanner(InputStream)  At ReleaseBuilder.java:[line 90]
H I Dm: Found reliance on default encoding in releasetools.ReleaseBuilder.buildVersionInfo(String, String): new java.io.PrintWriter(File)  At ReleaseBuilder.java:[line 120]
H I Dm: Found reliance on default encoding in releasetools.ReleaseBuilder.buildVersionInfo(String, String): new java.io.PrintStream(OutputStream)  At ReleaseBuilder.java:[line 150]
SpotBugs ended with exit code 1
M V EI: se.llbit.chunky.ui.ValidatingNumberStringConverter.validProperty() may expose internal representation by returning ValidatingNumberStringConverter.isValid  At ValidatingNumberStringConverter.java:[line 156]
M V EI: se.llbit.chunky.ui.ValidatingNumberStringConverter.getDecimalFormat() may expose internal representation by returning ValidatingNumberStringConverter.decimalFormat  At ValidatingNumberStringConverter.java:[line 50]
M V EI: se.llbit.chunky.ui.NumericTextField.getConverter() may expose internal representation by returning NumericTextField.converter  At NumericTextField.java:[line 81]
M B CT: Exception thrown in class se.llbit.chunky.launcher.ReleaseChannel at new se.llbit.chunky.launcher.ReleaseChannel(JsonObject) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ReleaseChannel.java:[line 35]
M B Eq: se.llbit.math.Octree$Node.equals(Object) fails for subtypes  At Octree.java:[line 240]
M V EI: se.llbit.math.WritableSize2D.getHeightBinding() may expose internal representation by returning WritableSize2D.heightBinding  At WritableSize2D.java:[line 66]
M V EI: se.llbit.math.WritableSize2D.getWidthBinding() may expose internal representation by returning WritableSize2D.widthBinding  At WritableSize2D.java:[line 61]
M V EI: se.llbit.chunky.ui.Adjuster.nameProperty() may expose internal representation by returning Adjuster.name  At Adjuster.java:[line 84]
M V EI: se.llbit.chunky.ui.Adjuster.invalidProperty() may expose internal representation by returning Adjuster.invalid  At Adjuster.java:[line 147]
H I Dm: Found reliance on default encoding in se.llbit.util.Util.byteArrayToHexString(byte[]): new String(byte[])  At Util.java:[line 75]
H I Dm: Found reliance on default encoding in se.llbit.util.Util.<static initializer for Util>(): String.getBytes()  At Util.java:[line 62]
M B Eq: se.llbit.chunky.resources.MinecraftFinder$MCVersion defines compareTo(MinecraftFinder$MCVersion) and uses Object.equals()  At MinecraftFinder.java:[line 217]
M B PA: Primitive field se.llbit.log.Log.level is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Log.java:[line 27]
H I Dm: Found reliance on default encoding in se.llbit.chunky.JsonSettings.save(File, File): new java.io.PrintStream(OutputStream)  At JsonSettings.java:[line 92]
H I Dm: Found reliance on default encoding in se.llbit.chunky.launcher.ui.DebugConsole.appendStdout(byte[], int): new String(byte[], int, int)  At DebugConsole.java:[line 93]
H I Dm: Found reliance on default encoding in se.llbit.chunky.launcher.ui.DebugConsole.appendStderr(byte[], int): new String(byte[], int, int)  At DebugConsole.java:[line 97]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.settingsRevision is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 43]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.updateSite is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 49]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.javaDir is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 45]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.skipJvmCheck is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 72]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.memoryLimit is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 46]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.debugConsole is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 52]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.verboseLogging is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 57]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.verboseLauncher is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 58]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.closeConsoleOnExit is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 62]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.javaOptions is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 59]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.chunkyOptions is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 60]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.version is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 61]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.showLauncher is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 67]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.showAdvancedSettings is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 68]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.releaseChannels is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 109]
M B PA: Primitive field se.llbit.chunky.launcher.LauncherSettings.selectedChannel is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At LauncherSettings.java:[line 122]
M D NP: Possible null pointer dereference in se.llbit.chunky.resources.MinecraftFinder.getMinecraftJar(File, boolean) due to return value of called method  Dereferenced at MinecraftFinder.java:[line 193]
M D NP: Possible null pointer dereference in se.llbit.chunky.resources.MinecraftFinder.getMinecraftJar(File, boolean) due to return value of called method  Dereferenced at MinecraftFinder.java:[line 156]
M B CT: Exception thrown in class se.llbit.chunky.launcher.ui.PluginManager at new se.llbit.chunky.launcher.ui.PluginManager() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PluginManager.java:[line 35]
M D UrF: Unread public/protected field: se.llbit.chunky.launcher.LauncherSettings.headless  At LauncherSettings.java:[line 66]
M D UrF: Unread public/protected field: se.llbit.chunky.launcher.LauncherSettings.forceGuiConsole  At LauncherSettings.java:[line 55]
M D UrF: Unread public/protected field: se.llbit.util.Pair.thing2  At Pair.java:[line 41]
M D UrF: Unread public/protected field: se.llbit.util.Pair.thing1  At Pair.java:[line 40]
H V MS: se.llbit.chunky.ui.Adjuster.AFTER_VALUE_CHANGE isn't final but should be  At Adjuster.java:[line 35]
M V MS: se.llbit.log.Log.level should be package protected  At Log.java:[line 27]
H V MS: se.llbit.chunky.PersistentSettings.settings isn't final but should be  At PersistentSettings.java:[line 40]
M V EI2: new se.llbit.chunky.launcher.LauncherInfoChecker(LauncherSettings, Consumer, Consumer) may expose internal representation by storing an externally mutable object into LauncherInfoChecker.settings  At LauncherInfoChecker.java:[line 37]
SpotBugs ended with exit code 1
H I Dm: Found reliance on default encoding in se.llbit.chunky.launcher.VersionInfo.writeTo(File): new java.io.PrintStream(OutputStream)  At VersionInfo.java:[line 193]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.chunky.launcher.ui.FirstTimeSetupDialog.lambda$new$0(RadioButton, RadioButton, Runnable, ActionEvent)  At FirstTimeSetupDialog.java:[line 91]
H I Dm: Found reliance on default encoding in se.llbit.chunky.launcher.ui.FirstTimeSetupDialog.lambda$new$0(RadioButton, RadioButton, Runnable, ActionEvent): new java.io.PrintStream(OutputStream)  At FirstTimeSetupDialog.java:[line 94]
M D NP: Possible null pointer dereference in se.llbit.chunky.launcher.JavaFxLocator.addJavaFXPathIfValid(Path, boolean) due to return value of called method  Dereferenced at JavaFxLocator.java:[line 122]
M D NP: Possible null pointer dereference in se.llbit.chunky.launcher.JavaFxLocator.scanForJavaFXLibs() due to return value of called method  Method invoked at JavaFxLocator.java:[line 66]
M D DMI: Hard coded reference to an absolute pathname in se.llbit.chunky.launcher.JavaFxLocator.scanForJavaFXLibs()  At JavaFxLocator.java:[line 68]
M D DMI: Hard coded reference to an absolute pathname in se.llbit.chunky.launcher.JavaFxLocator.scanForJavaFXLibs()  At JavaFxLocator.java:[line 71]
M B CT: Exception thrown in class se.llbit.chunky.launcher.JavaFxDownloads$Arch at new se.llbit.chunky.launcher.JavaFxDownloads$Arch(JsonObject) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At JavaFxDownloads.java:[line 75]
M D RCN: Redundant nullcheck of in which is known to be null in se.llbit.chunky.launcher.ChunkyDeployer.embeddedVersion()  Redundant null check at ChunkyDeployer.java:[line 242]
M D NP: Load of known null value in se.llbit.chunky.launcher.ChunkyDeployer.embeddedVersion()  At ChunkyDeployer.java:[line 242]
M P SBSC: se.llbit.chunky.launcher.ChunkyDeployer.classpath(VersionInfo) concatenates strings using + in a loop  At ChunkyDeployer.java:[line 401]
M D REC: Exception is caught when Exception is not thrown in se.llbit.chunky.launcher.ChunkyDeployer.is64BitJvm(LauncherSettings)  At ChunkyDeployer.java:[line 504]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.chunky.launcher.ChunkyDeployer.deployEmbeddedVersion(VersionInfo)  At ChunkyDeployer.java:[line 190]
M B CT: Exception thrown in class se.llbit.chunky.launcher.JavaFxDownloads$Os at new se.llbit.chunky.launcher.JavaFxDownloads$Os(JsonObject) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At JavaFxDownloads.java:[line 50]
M V EI2: new se.llbit.chunky.launcher.UpdateChecker(LauncherSettings, ReleaseChannel, UpdateListener) may expose internal representation by storing an externally mutable object into UpdateChecker.settings  At UpdateChecker.java:[line 43]
M D NP: Possible null pointer dereference in se.llbit.chunky.launcher.JavaFxInstaller.downloadAndInstall(URL, String) due to return value of called method  Method invoked at JavaFxInstaller.java:[line 170]
M B RV: Exceptional return value of java.io.File.delete() ignored in se.llbit.chunky.launcher.JavaFxInstaller.downloadAndInstall(URL, String)  At JavaFxInstaller.java:[line 185]
M B CT: Exception thrown in class se.llbit.chunky.launcher.JavaFxInstaller at new se.llbit.chunky.launcher.JavaFxInstaller(LauncherSettings) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At JavaFxInstaller.java:[line 101]
M V EI2: new se.llbit.chunky.launcher.ui.UpdateDialogController(ChunkyLauncherController, VersionInfo) may expose internal representation by storing an externally mutable object into UpdateDialogController.launcher  At UpdateDialogController.java:[line 81]
M V EI2: new se.llbit.chunky.launcher.ui.UpdateDialogController(ChunkyLauncherController, VersionInfo) may expose internal representation by storing an externally mutable object into UpdateDialogController.versionInfo  At UpdateDialogController.java:[line 82]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in new se.llbit.chunky.launcher.ui.UpdateDialogController(ChunkyLauncherController, VersionInfo)  At UpdateDialogController.java:[line 86]
M B CT: Exception thrown in class se.llbit.chunky.launcher.ui.UpdateDialog at new se.llbit.chunky.launcher.ui.UpdateDialog(ChunkyLauncherController, VersionInfo) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At UpdateDialog.java:[line 32]
M V EI2: new se.llbit.chunky.launcher.ui.LauncherUpdateDialogController(LauncherSettings, LauncherInfo) may expose internal representation by storing an externally mutable object into LauncherUpdateDialogController.settings  At LauncherUpdateDialogController.java:[line 40]
M B CT: Exception thrown in class se.llbit.chunky.launcher.ui.LauncherUpdateDialog at new se.llbit.chunky.launcher.ui.LauncherUpdateDialog(LauncherSettings, LauncherInfo) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At LauncherUpdateDialog.java:[line 32]
M B It: se.llbit.chunky.world.region.MCRegion$1.next() cannot throw NoSuchElementException  At MCRegion.java:[line 460]
M B FS: Format string should use %n rather than \n in se.llbit.chunky.launcher.ui.ChunkyLauncherController.lambda$initialize$18(String)  At ChunkyLauncherController.java:[line 258]
M V EI2: new se.llbit.chunky.launcher.ui.ChunkyLauncherController(LauncherSettings) may expose internal representation by storing an externally mutable object into ChunkyLauncherController.settings  At ChunkyLauncherController.java:[line 80]
M B CT: Exception thrown in class se.llbit.chunky.world.biome.ArrayBiomePalette at new se.llbit.chunky.world.biome.ArrayBiomePalette(List) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ArrayBiomePalette.java:[line 20]
M B It: se.llbit.chunky.world.region.ImposterCubicRegion$1.next() cannot throw NoSuchElementException  At ImposterCubicRegion.java:[line 359]
M D ST: Write to static field se.llbit.chunky.launcher.ui.ChunkyLauncherFx.stage from instance method se.llbit.chunky.launcher.ui.ChunkyLauncherFx.start(Stage)  At ChunkyLauncherFx.java:[line 55]
H D ST: Write to static field se.llbit.chunky.launcher.ui.ChunkyLauncherFx.hostServices from instance method se.llbit.chunky.launcher.ui.ChunkyLauncherFx.start(Stage)  At ChunkyLauncherFx.java:[line 45]
H B CN: se.llbit.chunky.renderer.scene.FogLayer defines clone() but doesn't implement Cloneable  At FogLayer.java:[line 32]
M B PA: Primitive field se.llbit.chunky.renderer.scene.FogLayer.y is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At FogLayer.java:[line 18]
M B PA: Primitive field se.llbit.chunky.renderer.scene.FogLayer.yWithOrigin is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At FogLayer.java:[line 19]
M B PA: Primitive field se.llbit.chunky.renderer.scene.FogLayer.breadth is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At FogLayer.java:[line 23]
M B PA: Primitive field se.llbit.chunky.renderer.scene.FogLayer.breadthInv is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At FogLayer.java:[line 24]
M B PA: Primitive field se.llbit.chunky.renderer.scene.FogLayer.density is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At FogLayer.java:[line 28]
H B HE: se.llbit.math.Octree$Node defines equals and uses Object.hashCode()  At Octree.java:[lines 240-243]
H I Dm: Found reliance on default encoding in se.llbit.chunky.launcher.ChunkyLauncher.headlessCreateSettingsDirectory(): new java.io.PrintStream(OutputStream)  At ChunkyLauncher.java:[line 284]
H I Dm: Found reliance on default encoding in se.llbit.chunky.launcher.ChunkyLauncher.doSetup(LauncherSettings): new java.util.Scanner(InputStream)  At ChunkyLauncher.java:[line 306]
M V EI: se.llbit.fxutil.ColumnsBoxBuilder.build() may expose internal representation by returning ColumnsBoxBuilder.columnsBox  At ColumnsBoxBuilder.java:[line 75]
M V EI: se.llbit.chunky.model.DispenserModel.getTextures() may expose internal representation by returning DispenserModel.textures  At DispenserModel.java:[line 43]
M V EI: se.llbit.chunky.model.DispenserModel.getBoxes() may expose internal representation by returning DispenserModel.boxes  At DispenserModel.java:[line 38]
M D SF: Switch statement found in new se.llbit.chunky.model.DispenserModel(String, Texture, Texture, Texture, Texture) where default case is missing  At DispenserModel.java:[lines 14-31]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.chunky.launcher.ConsoleUpdater.update(VersionInfo, LauncherSettings)  At ConsoleUpdater.java:[line 37]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.chunky.launcher.ui.PluginManagerController.initialize(URL, ResourceBundle)  At PluginManagerController.java:[line 237]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.chunky.launcher.ui.PluginManagerController.lambda$initialize$2(ActionEvent)  At PluginManagerController.java:[line 99]
M V EI: se.llbit.chunky.model.CarpetModel.getBoxes() may expose internal representation by returning CarpetModel.aabbs  At CarpetModel.java:[line 36]
M V EI: se.llbit.chunky.model.CarpetModel.getTextures() may expose internal representation by returning CarpetModel.textures  At CarpetModel.java:[line 41]
M V EI: se.llbit.chunky.model.DaylightSensorModel.getBoxes() may expose internal representation by returning DaylightSensorModel.aabbs  At DaylightSensorModel.java:[line 34]
M V EI: se.llbit.chunky.model.DaylightSensorModel.getTextures() may expose internal representation by returning DaylightSensorModel.textures  At DaylightSensorModel.java:[line 39]
SpotBugs ended with exit code 1
M V EI: se.llbit.chunky.renderer.RenderController.getContext() may expose internal representation by returning RenderController.context  At RenderController.java:[line 48]
M V EI2: new se.llbit.chunky.renderer.RenderController(RenderContext, RenderManager, SceneManager, SceneProvider) may expose internal representation by storing an externally mutable object into RenderController.context  At RenderController.java:[line 33]
M V EI: se.llbit.chunky.renderer.RenderController.getSceneProvider() may expose internal representation by returning RenderController.sceneProvider  At RenderController.java:[line 52]
M V EI2: new se.llbit.chunky.renderer.RenderController(RenderContext, RenderManager, SceneManager, SceneProvider) may expose internal representation by storing an externally mutable object into RenderController.renderManager  At RenderController.java:[line 34]
M V EI2: new se.llbit.chunky.renderer.RenderController(RenderContext, RenderManager, SceneManager, SceneProvider) may expose internal representation by storing an externally mutable object into RenderController.sceneProvider  At RenderController.java:[line 36]
M V EI: se.llbit.chunky.renderer.RenderController.getRenderManager() may expose internal representation by returning RenderController.renderManager  At RenderController.java:[line 44]
M V EI: se.llbit.chunky.model.FenceModel.getBoxes() may expose internal representation by returning FenceModel.boxes  At FenceModel.java:[line 71]
M V EI: se.llbit.chunky.model.FenceModel.getTextures() may expose internal representation by returning FenceModel.textures  At FenceModel.java:[line 76]
M V EI: se.llbit.chunky.model.ChorusFlowerModel.getBoxes() may expose internal representation by returning ChorusFlowerModel.boxes  At ChorusFlowerModel.java:[line 41]
M V EI: se.llbit.chunky.model.ChorusFlowerModel.getTextures() may expose internal representation by returning ChorusFlowerModel.textures  At ChorusFlowerModel.java:[line 46]
H I Dm: Found reliance on default encoding in new se.llbit.chunky.resources.PFMTexture(File): new java.util.Scanner(InputStream)  At PFMTexture.java:[line 35]
M V EI2: new se.llbit.util.PositionalOutputStream(OutputStream, LongConsumer) may expose internal representation by storing an externally mutable object into PositionalOutputStream.out  At PositionalOutputStream.java:[line 37]
M V EI: se.llbit.chunky.model.SlabModel.getBoxes() may expose internal representation by returning SlabModel.boxes  At SlabModel.java:[line 35]
M V EI: se.llbit.chunky.model.SlabModel.getTextures() may expose internal representation by returning SlabModel.textures  At SlabModel.java:[line 40]
M B PA: Primitive field se.llbit.math.Matrix3.m11 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 39]
M B PA: Primitive field se.llbit.math.Matrix3.m12 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 40]
M B PA: Primitive field se.llbit.math.Matrix3.m13 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 41]
M B PA: Primitive field se.llbit.math.Matrix3.m21 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 42]
M B PA: Primitive field se.llbit.math.Matrix3.m22 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 43]
M B PA: Primitive field se.llbit.math.Matrix3.m23 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 44]
M B PA: Primitive field se.llbit.math.Matrix3.m31 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 45]
M B PA: Primitive field se.llbit.math.Matrix3.m32 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 46]
M B PA: Primitive field se.llbit.math.Matrix3.m33 is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Matrix3.java:[line 47]
M V EI: se.llbit.chunky.model.AnvilModel.getUVMapping() may expose internal representation by returning AnvilModel.mapping  At AnvilModel.java:[line 87]
M V EI: se.llbit.chunky.model.AnvilModel.getTextures() may expose internal representation by returning AnvilModel.textures  At AnvilModel.java:[line 92]
M D IM: Computation of average could overflow in se.llbit.chunky.resources.PalettizedBitmapImage.setPixel(int, int, int)  At PalettizedBitmapImage.java:[line 42]
M D IM: Computation of average could overflow in se.llbit.chunky.resources.PalettizedBitmapImage.getPixel(int, int)  At PalettizedBitmapImage.java:[line 55]
M V EI: se.llbit.chunky.model.StairModel.getTextures() may expose internal representation by returning StairModel.textures  At StairModel.java:[line 163]
M V EI: se.llbit.chunky.model.StairModel.getTextures() may expose internal representation by returning StairModel.cornerTextures  At StairModel.java:[line 161]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.util.mojangapi.MojangApi.downloadSkin(String)  At MojangApi.java:[line 130]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.util.mojangapi.MojangApi.fetchProfile(String)  At MojangApi.java:[line 214]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.util.mojangapi.MojangApi.usernameToUUID(String)  At MojangApi.java:[line 271]
H I Dm: Found reliance on default encoding in se.llbit.util.mojangapi.MojangApi.fetchProfile(String): new java.io.InputStreamReader(InputStream)  At MojangApi.java:[line 198]
H I Dm: Found reliance on default encoding in se.llbit.util.mojangapi.MojangApi.fetchProfile(String): new java.io.PrintStream(OutputStream)  At MojangApi.java:[line 217]
H I Dm: Found reliance on default encoding in se.llbit.util.mojangapi.MojangApi.usernameToUUID(String): new java.io.PrintStream(OutputStream)  At MojangApi.java:[line 274]
M B CT: Exception thrown in class se.llbit.chunky.ui.dialogs.ChunkyErrorDialog at new se.llbit.chunky.ui.dialogs.ChunkyErrorDialog(Level) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ChunkyErrorDialog.java:[line 63]
M V EI: se.llbit.chunky.model.GrassBlockModel.getTextures() may expose internal representation by returning GrassBlockModel.textures  At GrassBlockModel.java:[line 41]
M V EI: se.llbit.chunky.model.GrassBlockModel.getBoxes() may expose internal representation by returning GrassBlockModel.boxes  At GrassBlockModel.java:[line 36]
M V EI: se.llbit.chunky.model.GrassBlockModel.getTints() may expose internal representation by returning GrassBlockModel.tints  At GrassBlockModel.java:[line 46]
M V EI: se.llbit.chunky.model.WallModel.getBoxes() may expose internal representation by returning WallModel.boxes  At WallModel.java:[line 65]
M V EI: se.llbit.chunky.model.WallModel.getTextures() may expose internal representation by returning WallModel.textures  At WallModel.java:[line 70]
M V EI: se.llbit.chunky.ui.Icons$IconBuilder.build() may expose internal representation by returning Icons$IconBuilder.svgPath  At Icons.java:[line 122]
M V EI: se.llbit.chunky.model.EnchantmentTableModel.getTextures() may expose internal representation by returning EnchantmentTableModel.textures  At EnchantmentTableModel.java:[line 41]
M V EI: se.llbit.chunky.model.EnchantmentTableModel.getBoxes() may expose internal representation by returning EnchantmentTableModel.aabbs  At EnchantmentTableModel.java:[line 36]
M V EI: se.llbit.chunky.ui.elements.SizeInput.getQueuedSize() may expose internal representation by returning SizeInput.queuedSize  At SizeInput.java:[line 282]
M V EI: se.llbit.chunky.ui.elements.SizeInput.getSize() may expose internal representation by returning SizeInput.currentSize  At SizeInput.java:[line 274]
M V EI: se.llbit.chunky.ui.elements.SizeInput.showAspectRatioDetailsProperty() may expose internal representation by returning SizeInput.showAspectRatioDetailsProperty  At SizeInput.java:[line 258]
M V EI: se.llbit.chunky.ui.elements.SizeInput.changeQueuedProperty() may expose internal representation by returning SizeInput.changeQueuedProperty  At SizeInput.java:[line 254]
M B RC: Suspicious comparison of Boolean references in se.llbit.chunky.ui.elements.SizeInput.lambda$initListeners$6(ObservableValue, Boolean, Boolean)  At SizeInput.java:[line 183]
M V EI: se.llbit.chunky.model.LeafModel.getTextures() may expose internal representation by returning LeafModel.textures  At LeafModel.java:[line 53]
M V EI: se.llbit.chunky.model.LeafModel.getBoxes() may expose internal representation by returning LeafModel.boxes  At LeafModel.java:[line 48]
M V EI: se.llbit.chunky.model.LeafModel.getTints() may expose internal representation by returning LeafModel.tints  At LeafModel.java:[line 58]
M B PA: Primitive field se.llbit.math.Vector2.x is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector2.java:[line 44]
M B PA: Primitive field se.llbit.math.Vector2.y is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector2.java:[line 45]
M B PA: Primitive field se.llbit.math.Vector4.x is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector4.java:[line 39]
M B PA: Primitive field se.llbit.math.Vector4.y is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector4.java:[line 39]
M B PA: Primitive field se.llbit.math.Vector4.z is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector4.java:[line 39]
M B PA: Primitive field se.llbit.math.Vector4.w is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector4.java:[line 39]
M B PA: Primitive field se.llbit.math.Vector3.x is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At AABB.java:[line 97]
M B PA: Primitive field se.llbit.math.Vector3.y is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At AABB.java:[line 98]
M B PA: Primitive field se.llbit.math.Vector3.z is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At AABB.java:[line 99]
M V EI2: new se.llbit.chunky.ui.dialogs.SettingsExport(JsonObject) may expose internal representation by storing an externally mutable object into SettingsExport.json  At SettingsExport.java:[line 113]
H I Dm: Found reliance on default encoding in se.llbit.util.mojangapi.MinecraftSkin.getSkinFromEncodedTextures(String): new String(byte[])  At MinecraftSkin.java:[line 55]
M D NP: Possible null pointer dereference in se.llbit.chunky.world.WorldScanner.findExistingChunks(File, WorldScanner$Operator) due to return value of called method  Dereferenced at WorldScanner.java:[line 61]
M B PA: Primitive field se.llbit.math.SimplexNoise.value is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SimplexNoise.java:[line 195]
M B PA: Primitive field se.llbit.math.SimplexNoise.ddx is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SimplexNoise.java:[line 212]
M B PA: Primitive field se.llbit.math.SimplexNoise.ddy is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SimplexNoise.java:[line 213]
M B PA: Primitive field se.llbit.math.SimplexNoise.ddz is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SimplexNoise.java:[line 214]
M V EI: se.llbit.math.Ray.getNormal() may expose internal representation by returning Ray.n  At Ray.java:[line 529]
M V EI2: se.llbit.math.Ray.setCurrentMaterial(Material, int) may expose internal representation by storing an externally mutable object into Ray.currentMaterial  At Ray.java:[line 491]
M V EI: se.llbit.math.Ray.getGeometryNormal() may expose internal representation by returning Ray.geomN  At Ray.java:[line 536]
M V EI: se.llbit.math.Ray.getCurrentMaterial() may expose internal representation by returning Ray.currentMaterial  At Ray.java:[line 500]
M V EI2: se.llbit.math.Ray.setCurrentMaterial(Material) may expose internal representation by storing an externally mutable object into Ray.currentMaterial  At Ray.java:[line 480]
M V EI: se.llbit.math.Ray.getPrevMaterial() may expose internal representation by returning Ray.prevMaterial  At Ray.java:[line 496]
M V EI2: se.llbit.math.Ray.setPrevMaterial(Material, int) may expose internal representation by storing an externally mutable object into Ray.prevMaterial  At Ray.java:[line 475]
M B PA: Primitive field se.llbit.math.Ray.distance is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Ray.java:[line 148]
M B PA: Primitive field se.llbit.math.Ray.depth is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Ray.java:[line 151]
M B PA: Primitive field se.llbit.math.Ray.specular is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Ray.java:[line 154]
M V EI: se.llbit.chunky.model.BeaconModel.getTextures() may expose internal representation by returning BeaconModel.textures  At BeaconModel.java:[line 48]
M V EI: se.llbit.chunky.model.BeaconModel.getBoxes() may expose internal representation by returning BeaconModel.boxes  At BeaconModel.java:[line 43]
M V EI: se.llbit.chunky.renderer.scene.Fog.getFogColor() may expose internal representation by returning Fog.fogColor  At Fog.java:[line 32]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.chunky.ui.controller.ChunkyFxController$2.getSceneFile(String)  At ChunkyFxController.java:[line 416]
M M SC: new se.llbit.chunky.renderer.RenderWorkerPool(int, long) invokes se.llbit.chunky.renderer.RenderWorkerPool$RenderWorker.start()  At RenderWorkerPool.java:[line 126]
M M JLM: Synchronization performed on java.util.concurrent.ConcurrentLinkedQueue in se.llbit.chunky.renderer.RenderWorkerPool.work(RenderWorkerPool$RenderWorker)  At RenderWorkerPool.java:[line 132]
M M JLM: Synchronization performed on java.util.concurrent.atomic.AtomicInteger in se.llbit.chunky.renderer.RenderWorkerPool.work(RenderWorkerPool$RenderWorker)  At RenderWorkerPool.java:[line 147]
M M JLM: Synchronization performed on java.util.concurrent.ConcurrentLinkedQueue in se.llbit.chunky.renderer.RenderWorkerPool.submit(RenderWorkerPool$RenderJob)  At RenderWorkerPool.java:[line 153]
M M JLM: Synchronization performed on java.util.concurrent.atomic.AtomicInteger in se.llbit.chunky.renderer.RenderWorkerPool.awaitEmpty()  At RenderWorkerPool.java:[line 171]
M V EI: se.llbit.chunky.model.GrassPathModel.getBoxes() may expose internal representation by returning GrassPathModel.boxes  At GrassPathModel.java:[line 31]
M V EI: se.llbit.chunky.model.GrassPathModel.getTextures() may expose internal representation by returning GrassPathModel.textures  At GrassPathModel.java:[line 36]
M D SF: Switch statement found in se.llbit.chunky.world.model.JsonModel.fromJson(JsonObject) where default case is missing  At JsonModel.java:[lines 181-209]
H I Dm: Found reliance on default encoding in se.llbit.chunky.world.model.JsonModel.fromJson(String): String.getBytes()  At JsonModel.java:[line 121]
M V EI2: new se.llbit.chunky.renderer.RenderWorkerPool$RenderWorker(RenderWorkerPool, int, long) may expose internal representation by storing an externally mutable object into RenderWorkerPool$RenderWorker.pool  At RenderWorkerPool.java:[line 53]
M B PA: Primitive field se.llbit.math.Vector3i.x is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector2.java:[line 160]
M B PA: Primitive field se.llbit.math.Vector3i.y is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector2.java:[line 161]
M B PA: Primitive field se.llbit.math.Vector3i.z is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Vector3.java:[line 184]
M B CT: Exception thrown in class se.llbit.imageformats.png.IEND at new se.llbit.imageformats.png.IEND() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At IEND.java:[line 41]
M V EI: se.llbit.chunky.chunk.GenericChunkData.getEntities() may expose internal representation by returning GenericChunkData.entities  At GenericChunkData.java:[line 72]
M V EI: se.llbit.chunky.chunk.GenericChunkData.getTileEntities() may expose internal representation by returning GenericChunkData.tileEntities  At GenericChunkData.java:[line 63]
M V EI2: se.llbit.chunky.chunk.GenericChunkData.setBiomeData(BiomeData) may expose internal representation by storing an externally mutable object into GenericChunkData.biomeData  At GenericChunkData.java:[line 96]
M V EI: se.llbit.chunky.chunk.GenericChunkData.getBiomeData() may expose internal representation by returning GenericChunkData.biomeData  At GenericChunkData.java:[line 91]
H B CN: se.llbit.chunky.main.ChunkyOptions defines clone() but doesn't implement Cloneable  At ChunkyOptions.java:[lines 64-70]
M V EI: se.llbit.chunky.main.ChunkyOptions.getResourcePacks() may expose internal representation by returning ChunkyOptions.resourcePacks  At ChunkyOptions.java:[line 74]
M B PA: Primitive field se.llbit.chunky.main.ChunkyOptions.sceneDir is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At ChunkyOptions.java:[line 32]
M B PA: Primitive field se.llbit.chunky.main.ChunkyOptions.renderThreads is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At ChunkyOptions.java:[line 40]
M V EI: se.llbit.chunky.map.MapView.getMapViewProperty() may expose internal representation by returning MapView.map  At MapView.java:[line 129]
M M UG: se.llbit.chunky.map.MapView.getScale() is unsynchronized, se.llbit.chunky.map.MapView.setScale(int) is synchronized  At MapView.java:[line 107]
M V EI2: new se.llbit.util.BitBuffer(long[], int, boolean) may expose internal representation by storing an externally mutable object into BitBuffer.data  At BitBuffer.java:[line 40]
M B CT: Exception thrown in class se.llbit.chunky.main.CommandLineOptions$OptionHandler at new se.llbit.chunky.main.CommandLineOptions$OptionHandler(String, CommandLineOptions$Range, int[], Consumer, Runnable) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At CommandLineOptions.java:[line 182]
M D SF: Switch statement found in new se.llbit.chunky.world.PlayerEntityData(Tag) where default case is missing  At PlayerEntityData.java:[lines 67-81]
M B PA: Primitive field se.llbit.math.bvh.BinaryBVH.depth is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At BinaryBVH.java:[line 147]
M B PA: Primitive field se.llbit.math.bvh.BinaryBVH.packed is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At BinaryBVH.java:[line 148]
M B PA: Primitive field se.llbit.math.bvh.BinaryBVH.packedPrimitives is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At BinaryBVH.java:[line 149]
M B CT: Exception thrown in class se.llbit.chunky.world.biome.MapBiomePalette at new se.llbit.chunky.world.biome.MapBiomePalette(List) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At MapBiomePalette.java:[line 26]
M V EI2: new se.llbit.chunky.world.region.ImposterCubicRegion(ChunkPosition, CubicDimension) may expose internal representation by storing an externally mutable object into ImposterCubicRegion.dimension  At ImposterCubicRegion.java:[line 54]
M V EI: se.llbit.chunky.ui.elements.TextFieldLabelWrapper.getLabelNode() may expose internal representation by returning TextFieldLabelWrapper.labelNode  At TextFieldLabelWrapper.java:[line 121]
H D DLS: Dead store to offset in se.llbit.chunky.ui.dialogs.Poser.buildBvh()  At Poser.java:[line 184]
M B CT: Exception thrown in class se.llbit.chunky.ui.dialogs.Poser at new se.llbit.chunky.ui.dialogs.Poser(EntitiesTab$EntityData) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At Poser.java:[line 60]
M V EI2: new se.llbit.util.TaskTracker(ProgressListener, TaskTracker$TaskBuilder, TaskTracker$TaskBuilder) may expose internal representation by storing an externally mutable object into TaskTracker.progress  At TaskTracker.java:[line 59]
M V EI: se.llbit.chunky.model.LightBlockModel.getBoxes() may expose internal representation by returning LightBlockModel.box  At LightBlockModel.java:[line 27]
M V EI2: new se.llbit.chunky.model.LightBlockModel(Vector4) may expose internal representation by storing an externally mutable object into LightBlockModel.color  At LightBlockModel.java:[line 22]
M V EI: se.llbit.chunky.model.LightBlockModel.getTextures() may expose internal representation by returning LightBlockModel.textures  At LightBlockModel.java:[line 45]
M V EI: se.llbit.chunky.renderer.RenderContext.getChunky() may expose internal representation by returning RenderContext.chunky  At RenderContext.java:[line 47]
M V EI2: new se.llbit.chunky.renderer.RenderContext(Chunky) may expose internal representation by storing an externally mutable object into RenderContext.chunky  At RenderContext.java:[line 41]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.chunky.renderer.RenderContext.getSceneFile(String)  At RenderContext.java:[line 83]
M D DCN: Do not catch NullPointerException like in se.llbit.chunky.resources.texturepack.TextureLoader.loadFromFile(File)  At TextureLoader.java:[line 67]
M D DCN: Do not catch NullPointerException like in se.llbit.chunky.resources.texturepack.TextureLoader.load(String, Path)  At TextureLoader.java:[line 85]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.HelpTab at new se.llbit.chunky.ui.render.tabs.HelpTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At HelpTab.java:[line 28]
M V EI: se.llbit.chunky.chunk.SimpleChunkData.getTileEntities() may expose internal representation by returning SimpleChunkData.tileEntities  At SimpleChunkData.java:[line 59]
M V EI: se.llbit.chunky.chunk.SimpleChunkData.getEntities() may expose internal representation by returning SimpleChunkData.entities  At SimpleChunkData.java:[line 69]
M V EI2: se.llbit.chunky.chunk.SimpleChunkData.setBiomeData(BiomeData) may expose internal representation by storing an externally mutable object into SimpleChunkData.biomeData  At SimpleChunkData.java:[line 95]
M V EI: se.llbit.chunky.chunk.SimpleChunkData.getBiomeData() may expose internal representation by returning SimpleChunkData.biomeData  At SimpleChunkData.java:[line 90]
H D FE: Test for floating point equality in se.llbit.chunky.renderer.scene.PreethamSky.updateSun(Sun, double)  At PreethamSky.java:[line 103]
M D DCN: Do not catch NullPointerException like in se.llbit.chunky.main.Version.<static initializer for Version>()  At Version.java:[line 37]
M V EI: se.llbit.chunky.model.FenceGateModel.getBoxes() may expose internal representation by returning FenceGateModel.boxes  At FenceGateModel.java:[line 85]
M V EI: se.llbit.chunky.model.FenceGateModel.getTextures() may expose internal representation by returning FenceGateModel.textures  At FenceGateModel.java:[line 90]
M V EI2: new se.llbit.chunky.resources.SolidColorTexture(Vector4) may expose internal representation by storing an externally mutable object into SolidColorTexture.color  At SolidColorTexture.java:[line 27]
M B CT: Exception thrown in class se.llbit.imageformats.png.PngFileWriter at new se.llbit.imageformats.png.PngFileWriter(OutputStream) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PngFileWriter.java:[line 47]
M B CT: Exception thrown in class se.llbit.imageformats.png.PngFileWriter at new se.llbit.imageformats.png.PngFileWriter(File) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PngFileWriter.java:[line 56]
M V EI2: new se.llbit.chunky.world.ChunkDataSource(int, byte[], ChunkDataSource$CompressionScheme) may expose internal representation by storing an externally mutable object into ChunkDataSource.data  At ChunkDataSource.java:[line 42]
M V DP: se.llbit.chunky.plugin.ChunkyPlugin.load(File, BiConsumer) creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block  At ChunkyPlugin.java:[line 87]
M V EI2: new se.llbit.chunky.resources.texturepack.EntityTextureLoader(String, EntityTexture) may expose internal representation by storing an externally mutable object into EntityTextureLoader.texture  At EntityTextureLoader.java:[line 39]
M V EI2: new se.llbit.chunky.world.region.MCRegion(ChunkPosition, Dimension) may expose internal representation by storing an externally mutable object into MCRegion.dimension  At MCRegion.java:[line 84]
M B RR: se.llbit.chunky.world.region.MCRegion.readChunkData(RandomAccessFile, ChunkPosition) ignores result of java.io.RandomAccessFile.read(byte[])  At MCRegion.java:[line 343]
M B RR: se.llbit.chunky.world.region.MCRegion.writeRegion(File, ChunkPosition, DataOutputStream, Set) ignores result of java.io.RandomAccessFile.read(byte[])  At MCRegion.java:[line 430]
M V EI: se.llbit.chunky.resources.Texture.getColor(int, int) may expose internal representation by returning Texture.avgColorFlat  At Texture.java:[line 1431]
M V EI: se.llbit.chunky.resources.Texture.getAvgColorFlat() may expose internal representation by returning Texture.avgColorFlat  At Texture.java:[line 1500]
M V EI: se.llbit.chunky.resources.Texture.getAvgColorLinear() may expose internal representation by returning Texture.avgColorLinear  At Texture.java:[line 1494]
M V EI: se.llbit.chunky.resources.Texture.getBitmap() may expose internal representation by returning Texture.image  At Texture.java:[line 1531]
M V EI2: se.llbit.chunky.resources.Texture.setTexture(BitmapImage) may expose internal representation by storing an externally mutable object into Texture.image  At Texture.java:[line 1361]
M V EI: se.llbit.chunky.resources.Texture.fxImage() may expose internal representation by returning Texture.fxImage  At Texture.java:[line 1522]
M D IM: Check for oddness that won't work for negative numbers in se.llbit.chunky.resources.Texture.<static initializer for Texture>()  At Texture.java:[line 1188]
M B PA: Primitive field se.llbit.chunky.world.Material.ior is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Material.java:[line 40]
M B PA: Primitive field se.llbit.chunky.world.Material.opaque is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Material.java:[line 45]
M B PA: Primitive field se.llbit.chunky.world.Material.solid is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Material.java:[line 51]
M B PA: Primitive field se.llbit.chunky.world.Material.specular is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Material.java:[line 56]
M B PA: Primitive field se.llbit.chunky.world.Material.emittance is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At ExtraMaterials.java:[line 45]
M B PA: Primitive field se.llbit.chunky.world.Material.roughness is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Ray.java:[line 337]
M B PA: Primitive field se.llbit.chunky.world.Material.subSurfaceScattering is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Material.java:[line 81]
M B PA: Primitive field se.llbit.chunky.world.Material.metalness is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Material.java:[line 76]
M V EI2: new se.llbit.chunky.resources.texturepack.PlayerTextureLoader(String, PlayerTexture, PlayerModel) may expose internal representation by storing an externally mutable object into PlayerTextureLoader.texture  At PlayerTextureLoader.java:[line 37]
M V EI: se.llbit.chunky.renderer.scene.Camera.getPosition() may expose internal representation by returning Camera.pos  At Camera.java:[line 561]
M D SF: Switch statement found in se.llbit.chunky.renderer.scene.Camera.createProjector() where one case falls through to the next case  At Camera.java:[lines 231-233]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Camera.apertureShape is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Camera.java:[line 162]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Camera.name is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Camera.java:[line 160]
M M UG: se.llbit.chunky.renderer.scene.Camera.getSubjectDistance() is unsynchronized, se.llbit.chunky.renderer.scene.Camera.setSubjectDistance(double) is synchronized  At Camera.java:[line 359]
M M UG: se.llbit.chunky.renderer.scene.Camera.getProjectionMode() is unsynchronized, se.llbit.chunky.renderer.scene.Camera.setProjectionMode(ProjectionMode) is synchronized  At Camera.java:[line 303]
M M UG: se.llbit.chunky.renderer.scene.Camera.getDof() is unsynchronized, se.llbit.chunky.renderer.scene.Camera.setDof(double) is synchronized  At Camera.java:[line 289]
M V EI: se.llbit.chunky.model.TexturedBlockModel.getBoxes() may expose internal representation by returning TexturedBlockModel.boxes  At TexturedBlockModel.java:[line 44]
M V EI: se.llbit.chunky.model.TexturedBlockModel.getTextures() may expose internal representation by returning TexturedBlockModel.textures  At TexturedBlockModel.java:[line 49]
M B CT: Exception thrown in class se.llbit.chunky.world.material.TextureMaterial at new se.llbit.chunky.world.material.TextureMaterial(Texture) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At TextureMaterial.java:[line 28]
M V EI2: new se.llbit.chunky.resources.texturepack.SimpleTexture(String, Texture) may expose internal representation by storing an externally mutable object into SimpleTexture.texture  At SimpleTexture.java:[line 39]
M V EI2: new se.llbit.chunky.resources.SignTexture(JsonArray[], Texture, boolean) may expose internal representation by storing an externally mutable object into SignTexture.signTexture  At SignTexture.java:[line 53]
M V EI2: se.llbit.chunky.world.SkymapTexture.setTexture(BitmapImage) may expose internal representation by storing an externally mutable object into SkymapTexture.image  At SkymapTexture.java:[line 77]
M V EI2: new se.llbit.chunky.resources.texturepack.ColoredTexture(String, int, Texture) may expose internal representation by storing an externally mutable object into ColoredTexture.texture  At ColoredTexture.java:[line 42]
M V EI2: new se.llbit.chunky.resources.texturepack.LayeredTextureLoader(String, Texture, TextureLoader) may expose internal representation by storing an externally mutable object into LayeredTextureLoader.texture  At LayeredTextureLoader.java:[line 42]
M D SF: Switch statement found in se.llbit.chunky.entity.HeadEntity.primitives(Vector3) where default case is missing  At HeadEntity.java:[lines 85-115]
M B RV: Exceptional return value of java.io.File.delete() ignored in se.llbit.chunky.entity.HeadEntity.lambda$downloadTexture$0(String, String)  At HeadEntity.java:[line 166]
M D SF: Switch statement found in se.llbit.chunky.entity.SkullEntity.primitives(Vector3) where default case is missing  At SkullEntity.java:[lines 285-315]
M D SF: Switch statement found in new se.llbit.chunky.world.model.CubeModel(Collection, double, Map) where default case is missing  At CubeModel.java:[lines 73-126]
M D SF: Switch statement found in se.llbit.chunky.world.model.CubeModel.addFace(Collection, Face, double[][], int[], int[][], int[][], Vector4, boolean) where default case is missing  At CubeModel.java:[lines 160-225]
M D DLS: Dead store to ph in new se.llbit.chunky.entity.PaintingEntity$Painting(Texture, int, int)  At PaintingEntity.java:[line 54]
M D DLS: Dead store to pw in new se.llbit.chunky.entity.PaintingEntity$Painting(Texture, int, int)  At PaintingEntity.java:[line 53]
M V EI: se.llbit.chunky.entity.PlayerEntity.gearSlots() may expose internal representation by returning PlayerEntity.gearSlots  At PlayerEntity.java:[line 986]
M V EI: se.llbit.chunky.entity.PlayerEntity.partNames() may expose internal representation by returning PlayerEntity.partNames  At PlayerEntity.java:[line 956]
M D SF: Switch statement found in se.llbit.chunky.entity.PlayerEntity.getHelmModel(JsonObject) where default case is missing  At PlayerEntity.java:[lines 682-705]
M D SF: Switch statement found in se.llbit.chunky.entity.PlayerEntity.getTexture(JsonObject) where default case is missing  At PlayerEntity.java:[lines 762-785]
H I Dm: Found reliance on default encoding in se.llbit.chunky.entity.PlayerEntity.parseJson(String): String.getBytes()  At PlayerEntity.java:[line 724]
M B PA: Primitive field se.llbit.chunky.entity.PlayerEntity.skin is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At PlayerEntity.java:[line 77]
M B PA: Primitive field se.llbit.chunky.entity.PlayerEntity.scale is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At PlayerEntity.java:[line 71]
M B PA: Primitive field se.llbit.chunky.entity.PlayerEntity.headScale is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At PlayerEntity.java:[line 72]
M V EI2: se.llbit.chunky.world.Dimension.setPlayerEntities(Set) may expose internal representation by storing an externally mutable object into Dimension.playerEntities  At Dimension.java:[line 310]
M V EI2: se.llbit.chunky.world.Dimension.setSpawnPos(Vector3i) may expose internal representation by storing an externally mutable object into Dimension.spawnPos  At Dimension.java:[line 274]
M V EI: se.llbit.chunky.world.Dimension.getHeightmap() may expose internal representation by returning Dimension.heightmap  At Dimension.java:[line 202]
M V EI: se.llbit.chunky.entity.ArmorStand.partNames() may expose internal representation by returning ArmorStand.partNames  At ArmorStand.java:[line 594]
M V EI: se.llbit.chunky.entity.ArmorStand.getGear() may expose internal representation by returning ArmorStand.gear  At ArmorStand.java:[line 622]
M V EI: se.llbit.chunky.entity.ArmorStand.gearSlots() may expose internal representation by returning ArmorStand.gearSlots  At ArmorStand.java:[line 618]
M V EI: se.llbit.chunky.entity.ArmorStand.getPose() may expose internal representation by returning ArmorStand.pose  At ArmorStand.java:[line 614]
M D DLS: Dead store to handItems in new se.llbit.chunky.entity.ArmorStand(Vector3, Tag)  At ArmorStand.java:[line 393]
M V EI: se.llbit.chunky.model.SpriteModel.getTextures() may expose internal representation by returning SpriteModel.textures  At SpriteModel.java:[line 72]
M V EI: se.llbit.chunky.renderer.scene.SceneEntities.getEntityLoadingPreferences() may expose internal representation by returning SceneEntities.entityLoadingPreferences  At SceneEntities.java:[line 223]
M B Eq: se.llbit.chunky.world.World defines compareTo(World) and uses Object.equals()  At World.java:[line 450]
M V EI: se.llbit.chunky.world.World.currentDimension() may expose internal representation by returning World.currentDimension  At World.java:[line 251]
M V EI: se.llbit.chunky.block.BlockSpec.getTag() may expose internal representation by returning BlockSpec.tag  At BlockSpec.java:[line 67]
M V EI2: new se.llbit.chunky.block.BlockSpec(Tag) may expose internal representation by storing an externally mutable object into BlockSpec.tag  At BlockSpec.java:[line 20]
M V EI2: new se.llbit.chunky.chunk.BlockPalette(Map, List) may expose internal representation by storing an externally mutable object into BlockPalette.palette  At BlockPalette.java:[line 68]
M V EI2: new se.llbit.chunky.chunk.BlockPalette(Map, List) may expose internal representation by storing an externally mutable object into BlockPalette.blockMap  At BlockPalette.java:[line 67]
M V EI: se.llbit.chunky.chunk.BlockPalette.getPalette() may expose internal representation by returning BlockPalette.palette  At BlockPalette.java:[line 590]
M V EI2: new se.llbit.chunky.map.WorldMapLoader(ChunkyFxController, MapView) may expose internal representation by storing an externally mutable object into WorldMapLoader.mapView  At WorldMapLoader.java:[line 55]
M V EI: se.llbit.chunky.map.WorldMapLoader.getWorld() may expose internal representation by returning WorldMapLoader.world  At WorldMapLoader.java:[line 131]
M M SC: new se.llbit.chunky.map.WorldMapLoader(ChunkyFxController, MapView) invokes se.llbit.chunky.world.region.RegionParser.start()  At WorldMapLoader.java:[line 62]
M V EI2: new se.llbit.chunky.main.ZipExportJob(World, Collection, File, ProgressTracker) may expose internal representation by storing an externally mutable object into ZipExportJob.progress  At ZipExportJob.java:[line 50]
M V EI2: new se.llbit.chunky.main.ZipExportJob(World, Collection, File, ProgressTracker) may expose internal representation by storing an externally mutable object into ZipExportJob.selected  At ZipExportJob.java:[line 48]
M V EI2: new se.llbit.chunky.main.ZipExportJob(World, Collection, File, ProgressTracker) may expose internal representation by storing an externally mutable object into ZipExportJob.world  At ZipExportJob.java:[line 47]
M V EI: se.llbit.math.Octree.getImplementation() may expose internal representation by returning Octree.implementation  At Octree.java:[line 836]
M V EI2: se.llbit.chunky.ui.controller.WorldChooserController.setStage(Stage) may expose internal representation by storing an externally mutable object into WorldChooserController.stage  At WorldChooserController.java:[line 89]
M V EI: se.llbit.chunky.block.legacy.UnfinalizedLegacyBlock.getIncompleteBlock() may expose internal representation by returning UnfinalizedLegacyBlock.block  At UnfinalizedLegacyBlock.java:[line 72]
M V EI2: new se.llbit.chunky.block.FinalizationState(BlockPalette) may expose internal representation by storing an externally mutable object into FinalizationState.palette  At FinalizationState.java:[line 12]
M V EI: se.llbit.chunky.block.FinalizationState.getPalette() may expose internal representation by returning FinalizationState.palette  At FinalizationState.java:[line 45]
M B CT: Exception thrown in class se.llbit.chunky.ui.dialogs.WorldChooser at new se.llbit.chunky.ui.dialogs.WorldChooser(WorldMapLoader) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At WorldChooser.java:[line 51]
M V EI2: new se.llbit.chunky.block.OctreeFinalizationState(Octree, Octree, BlockPalette, int, int) may expose internal representation by storing an externally mutable object into OctreeFinalizationState.worldTree  At OctreeFinalizationState.java:[line 20]
M V EI2: new se.llbit.chunky.block.OctreeFinalizationState(Octree, Octree, BlockPalette, int, int) may expose internal representation by storing an externally mutable object into OctreeFinalizationState.waterTree  At OctreeFinalizationState.java:[line 21]
M D ST: Write to static field se.llbit.chunky.renderer.scene.Scene.invalidWarn from instance method se.llbit.chunky.renderer.scene.Scene.intersect(Ray)  At Scene.java:[line 695]
M B FS: Format string should use %n rather than \n in se.llbit.chunky.renderer.scene.Scene.sceneStatus()  At Scene.java:[line 2381]
M B FS: Format string should use %n rather than \n in se.llbit.chunky.renderer.scene.Scene.sceneStatus()  At Scene.java:[line 2390]
M V EI: se.llbit.chunky.renderer.scene.Scene.getEmitterGrid() may expose internal representation by returning Scene.emitterGrid  At Scene.java:[line 3264]
M V EI: se.llbit.chunky.renderer.scene.Scene.sun() may expose internal representation by returning Scene.sun  At Scene.java:[line 3063]
M V EI: se.llbit.chunky.renderer.scene.Scene.sky() may expose internal representation by returning Scene.sky  At Scene.java:[line 3070]
M V EI: se.llbit.chunky.renderer.scene.Scene.getOrigin() may expose internal representation by returning Scene.origin  At Scene.java:[line 1718]
M V EI: se.llbit.chunky.renderer.scene.Scene.getSampleBuffer() may expose internal representation by returning Scene.samples  At Scene.java:[line 2436]
M V EI: se.llbit.chunky.renderer.scene.Scene.getWaterOctree() may expose internal representation by returning Scene.waterOctree  At Scene.java:[line 3299]
M V EI: se.llbit.chunky.renderer.scene.Scene.getWaterColor() may expose internal representation by returning Scene.waterColor  At Scene.java:[line 2595]
M V EI: se.llbit.chunky.renderer.scene.Scene.camera() may expose internal representation by returning Scene.camera  At Scene.java:[line 3077]
M V EI: se.llbit.chunky.renderer.scene.Scene.getPalette() may expose internal representation by returning Scene.palette  At Scene.java:[line 660]
M V EI2: se.llbit.chunky.renderer.scene.Scene.loadChunks(TaskTracker, World, Collection) may expose internal representation by storing an externally mutable object into Scene.loadedWorld  At Scene.java:[line 819]
M V EI: se.llbit.chunky.renderer.scene.Scene.getWorldOctree() may expose internal representation by returning Scene.worldOctree  At Scene.java:[line 3294]
M V EI: se.llbit.chunky.renderer.scene.Scene.getBackBuffer() may expose internal representation by returning Scene.backBuffer  At Scene.java:[line 2444]
M V EI: se.llbit.chunky.renderer.scene.Scene.getAlphaChannel() may expose internal representation by returning Scene.alphaChannel  At Scene.java:[line 2452]
M V EI: se.llbit.chunky.renderer.scene.Scene.getCameraPresets() may expose internal representation by returning Scene.cameraPresets  At Scene.java:[line 3103]
M V EI: se.llbit.chunky.renderer.scene.Scene.getWorld() may expose internal representation by returning Scene.loadedWorld  At Scene.java:[line 3389]
M D UC: Useless object stored in variable state of method se.llbit.chunky.renderer.scene.Scene.traceTarget(Ray)  At Scene.java:[line 1672]
M B RV: Exceptional return value of java.io.File.delete() ignored in se.llbit.chunky.renderer.scene.Scene.delete(String, File)  At Scene.java:[line 376]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in se.llbit.chunky.renderer.scene.Scene.saveSnapshot(File, TaskTracker)  At Scene.java:[line 2061]
M B RV: Exceptional return value of java.io.File.delete() ignored in se.llbit.chunky.renderer.scene.Scene.backupFile(File, File)  At Scene.java:[line 2774]
H I Dm: Found reliance on default encoding in se.llbit.chunky.renderer.scene.Scene.saveDescription(OutputStream): new java.io.PrintStream(OutputStream)  At Scene.java:[line 2843]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.materials is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 270]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.yClipMin is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SceneEntities.java:[line 147]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.yClipMax is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SceneEntities.java:[line 147]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.spp is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 192]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.renderTime is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 472]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.width is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 353]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.height is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 354]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.fullWidth is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 181]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.fullHeight is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 182]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.cropX is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 183]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.cropY is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 184]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.name is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 169]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.postProcessingFilter is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 186]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.outputMode is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 187]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Scene.sdfVersion is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Scene.java:[line 168]
M V EI: se.llbit.chunky.renderer.scene.SynchronousSceneManager.getScene() may expose internal representation by returning SynchronousSceneManager.scene  At SynchronousSceneManager.java:[line 119]
M V EI2: new se.llbit.chunky.renderer.scene.SynchronousSceneManager(RenderContext, RenderManager) may expose internal representation by storing an externally mutable object into SynchronousSceneManager.renderManager  At SynchronousSceneManager.java:[line 82]
M V EI2: new se.llbit.chunky.renderer.scene.SynchronousSceneManager(RenderContext, RenderManager) may expose internal representation by storing an externally mutable object into SynchronousSceneManager.context  At SynchronousSceneManager.java:[line 81]
M M UG: se.llbit.chunky.renderer.scene.Scene.getSunSamplingStrategy() is unsynchronized, se.llbit.chunky.renderer.scene.Scene.setSunSamplingStrategy(SunSamplingStrategy) is synchronized  At Scene.java:[line 647]
M M UG: se.llbit.chunky.renderer.scene.Scene.getRayDepth() is unsynchronized, se.llbit.chunky.renderer.scene.Scene.setRayDepth(int) is synchronized  At Scene.java:[line 1652]
M M UG: se.llbit.chunky.renderer.scene.Scene.getExposure() is unsynchronized, se.llbit.chunky.renderer.scene.Scene.setExposure(double) is synchronized  At Scene.java:[line 610]
M M UG: se.llbit.chunky.renderer.scene.Scene.getEmittersEnabled() is unsynchronized, se.llbit.chunky.renderer.scene.Scene.setEmittersEnabled(boolean) is synchronized  At Scene.java:[line 654]
M V EI: se.llbit.chunky.renderer.scene.AsynchronousSceneManager.getSceneProvider() may expose internal representation by returning AsynchronousSceneManager.sceneManager  At AsynchronousSceneManager.java:[line 56]
H D ST: Write to static field se.llbit.chunky.ui.ChunkyFx.hostServices from instance method se.llbit.chunky.ui.ChunkyFx.start(Stage)  At ChunkyFx.java:[line 50]
M V MS: se.llbit.chunky.ui.ChunkyFx.startChunkyUI(Chunky) may expose internal static state by storing a mutable object into a static field se.llbit.chunky.ui.ChunkyFx.chunkyInstance  At ChunkyFx.java:[line 85]
M V EI: se.llbit.chunky.main.Chunky.getRenderContextMenuTransformers() may expose internal representation by returning Chunky.renderContextMenuTransformers  At Chunky.java:[line 501]
M V EI: se.llbit.chunky.main.Chunky.getMapContextMenuTransformers() may expose internal representation by returning Chunky.mapContextMenuTransformers  At Chunky.java:[line 489]
M D SF: Switch statement found in se.llbit.chunky.main.Chunky.main(String[]) where default case is missing  At Chunky.java:[lines 227-235]
M M LI: Incorrect lazy initialization of static field se.llbit.chunky.main.Chunky.commonThreads in se.llbit.chunky.main.Chunky.getCommonThreads()  At Chunky.java:[lines 343-344]
M V EI2: new se.llbit.chunky.world.Chunk(ChunkPosition, Dimension) may expose internal representation by storing an externally mutable object into Chunk.dimension  At Chunk.java:[line 98]
H B HE: se.llbit.chunky.world.ChunkView defines equals and uses Object.hashCode()  At ChunkView.java:[lines 161-172]
M B PA: Primitive field se.llbit.chunky.map.MapTile.isCached is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At MapTile.java:[line 47]
M B PA: Primitive field se.llbit.chunky.map.MapTile.pos is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At MapTile.java:[line 65]
M B PA: Primitive field se.llbit.chunky.map.MapTile.scale is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At MapTile.java:[line 64]
M B PA: Primitive field se.llbit.chunky.map.MapTile.tileWidth is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At MapTile.java:[line 68]
M B CT: Exception thrown in class se.llbit.chunky.ui.dialogs.SceneChooser at new se.llbit.chunky.ui.dialogs.SceneChooser(ChunkyFxController) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At SceneChooser.java:[line 40]
M V EI: se.llbit.chunky.ui.controller.ChunkyFxController.getMapView() may expose internal representation by returning ChunkyFxController.mapView  At ChunkyFxController.java:[line 897]
M V EI: se.llbit.chunky.ui.controller.ChunkyFxController.getChunkSelection() may expose internal representation by returning ChunkyFxController.chunkSelection  At ChunkyFxController.java:[line 901]
M V EI: se.llbit.chunky.ui.controller.ChunkyFxController.getChunky() may expose internal representation by returning ChunkyFxController.chunky  At ChunkyFxController.java:[line 869]
M V EI: se.llbit.chunky.ui.controller.ChunkyFxController.getMap() may expose internal representation by returning ChunkyFxController.map  At ChunkyFxController.java:[line 865]
M V EI2: new se.llbit.chunky.ui.controller.ChunkyFxController(Stage, Chunky) may expose internal representation by storing an externally mutable object into ChunkyFxController.stage  At ChunkyFxController.java:[line 271]
M V EI2: new se.llbit.chunky.ui.controller.ChunkyFxController(Stage, Chunky) may expose internal representation by storing an externally mutable object into ChunkyFxController.chunky  At ChunkyFxController.java:[line 272]
M V EI: se.llbit.chunky.ui.controller.ChunkyFxController.getMapLoader() may expose internal representation by returning ChunkyFxController.mapLoader  At ChunkyFxController.java:[line 873]
M V EI2: se.llbit.chunky.ui.controller.SceneChooserController.setStage(Stage) may expose internal representation by storing an externally mutable object into SceneChooserController.stage  At SceneChooserController.java:[line 180]
M V EI2: new se.llbit.chunky.renderer.scene.Sky(Scene) may expose internal representation by storing an externally mutable object into Sky.scene  At Sky.java:[line 189]
M V EI: se.llbit.chunky.renderer.scene.Sky.getColor() may expose internal representation by returning Sky.color  At Sky.java:[line 1183]
M V EI: se.llbit.chunky.model.TopBottomOrientedTexturedBlockModel.getTextures() may expose internal representation by returning TopBottomOrientedTexturedBlockModel.textures  At TopBottomOrientedTexturedBlockModel.java:[line 56]
M V EI2: new se.llbit.chunky.model.TopBottomOrientedTexturedBlockModel(String, Quad[], Texture[]) may expose internal representation by storing an externally mutable object into TopBottomOrientedTexturedBlockModel.textures  At TopBottomOrientedTexturedBlockModel.java:[line 26]
M V EI: se.llbit.chunky.model.TopBottomOrientedTexturedBlockModel.getQuads() may expose internal representation by returning TopBottomOrientedTexturedBlockModel.quads  At TopBottomOrientedTexturedBlockModel.java:[line 51]
M V EI: se.llbit.chunky.model.TerracottaModel.getTextures() may expose internal representation by returning TerracottaModel.textures  At TerracottaModel.java:[line 90]
M V EI: se.llbit.chunky.model.TerracottaModel.getQuads() may expose internal representation by returning TerracottaModel.quads  At TerracottaModel.java:[line 85]
M V EI2: new se.llbit.chunky.entity.FlameParticles(Vector3, double, Block, Vector3[]) may expose internal representation by storing an externally mutable object into FlameParticles.block  At FlameParticles.java:[line 60]
M V EI2: new se.llbit.chunky.entity.FlameParticles(Vector3, double, Block, Vector3[]) may expose internal representation by storing an externally mutable object into FlameParticles.flames  At FlameParticles.java:[line 58]
M V EI: se.llbit.chunky.model.DirectionalBlockModel.getQuads() may expose internal representation by returning DirectionalBlockModel.quads  At DirectionalBlockModel.java:[line 109]
M V EI: se.llbit.chunky.model.DirectionalBlockModel.getTextures() may expose internal representation by returning DirectionalBlockModel.textures  At DirectionalBlockModel.java:[line 114]
M V EI2: new se.llbit.chunky.entity.SignEntity(Vector3, JsonArray[], JsonArray[], int, String) may expose internal representation by storing an externally mutable object into SignEntity.frontText  At SignEntity.java:[line 193]
M V EI2: new se.llbit.chunky.entity.SignEntity(Vector3, JsonArray[], JsonArray[], int, String) may expose internal representation by storing an externally mutable object into SignEntity.backText  At SignEntity.java:[line 194]
H I Dm: Found reliance on default encoding in se.llbit.chunky.entity.SignEntity.extractText(Tag): String.getBytes()  At SignEntity.java:[line 262]
M V EI: se.llbit.chunky.model.FixedTopBottomRotatableTexturedBlockModel.getQuads() may expose internal representation by returning FixedTopBottomRotatableTexturedBlockModel.quads  At FixedTopBottomRotatableTexturedBlockModel.java:[line 65]
M V EI2: new se.llbit.chunky.model.FixedTopBottomRotatableTexturedBlockModel(String, Quad[], Texture[]) may expose internal representation by storing an externally mutable object into FixedTopBottomRotatableTexturedBlockModel.textures  At FixedTopBottomRotatableTexturedBlockModel.java:[line 27]
M V EI: se.llbit.chunky.model.FixedTopBottomRotatableTexturedBlockModel.getTextures() may expose internal representation by returning FixedTopBottomRotatableTexturedBlockModel.textures  At FixedTopBottomRotatableTexturedBlockModel.java:[line 70]
M V EI: se.llbit.chunky.model.CalibratedSculkSensorModel.getTextures() may expose internal representation by returning CalibratedSculkSensorModel.textures  At CalibratedSculkSensorModel.java:[line 161]
M V EI: se.llbit.chunky.model.CalibratedSculkSensorModel.getQuads() may expose internal representation by returning CalibratedSculkSensorModel.quads  At CalibratedSculkSensorModel.java:[line 156]
M V EI: se.llbit.chunky.model.PressurePlateModel.getQuads() may expose internal representation by returning PressurePlateModel.quads  At PressurePlateModel.java:[line 63]
M V EI: se.llbit.chunky.model.PressurePlateModel.getTextures() may expose internal representation by returning PressurePlateModel.textures  At PressurePlateModel.java:[line 68]
M V EI: se.llbit.chunky.model.NetherPortalModel.getQuads() may expose internal representation by returning NetherPortalModel.quads  At NetherPortalModel.java:[line 39]
M V EI: se.llbit.chunky.model.NetherPortalModel.getTextures() may expose internal representation by returning NetherPortalModel.textures  At NetherPortalModel.java:[line 44]
M V EI: se.llbit.chunky.entity.Book.getPose() may expose internal representation by returning Book.pose  At Book.java:[line 327]
M V EI: se.llbit.chunky.model.BedModel.getQuads() may expose internal representation by returning BedModel.quads  At BedModel.java:[line 205]
M V EI: se.llbit.chunky.model.BedModel.getTextures() may expose internal representation by returning BedModel.textures  At BedModel.java:[line 210]
M V EI: se.llbit.chunky.model.AzaleaModel.getQuads() may expose internal representation by returning AzaleaModel.quads  At AzaleaModel.java:[line 120]
M V EI: se.llbit.chunky.model.AzaleaModel.getTextures() may expose internal representation by returning AzaleaModel.textures  At AzaleaModel.java:[line 125]
M V EI: se.llbit.chunky.model.GrindstoneModel.getQuads() may expose internal representation by returning GrindstoneModel.quads  At GrindstoneModel.java:[line 242]
M V EI: se.llbit.chunky.model.GrindstoneModel.getTextures() may expose internal representation by returning GrindstoneModel.textures  At GrindstoneModel.java:[line 247]
M V EI: se.llbit.chunky.model.DoorModel.getTextures() may expose internal representation by returning DoorModel.textures  At DoorModel.java:[line 115]
M V EI: se.llbit.chunky.model.DoorModel.getQuads() may expose internal representation by returning DoorModel.quads  At DoorModel.java:[line 110]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.settings.SkyboxSettings at new se.llbit.chunky.ui.render.settings.SkyboxSettings() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At SkyboxSettings.java:[line 55]
M V EI: se.llbit.chunky.model.GrassTintedSpriteModel.getTints() may expose internal representation by returning GrassTintedSpriteModel.tinting  At GrassTintedSpriteModel.java:[line 33]
M V EI: se.llbit.chunky.model.CandleModel.getTextures() may expose internal representation by returning CandleModel.textures  At CandleModel.java:[line 701]
M V EI: se.llbit.chunky.model.CandleModel.getQuads() may expose internal representation by returning CandleModel.quads  At CandleModel.java:[line 696]
M V EI: se.llbit.chunky.model.BigDripleafStemModel.getQuads() may expose internal representation by returning BigDripleafStemModel.quads  At BigDripleafStemModel.java:[line 73]
M V EI: se.llbit.chunky.model.BigDripleafStemModel.getTextures() may expose internal representation by returning BigDripleafStemModel.textures  At BigDripleafStemModel.java:[line 78]
M V EI: se.llbit.chunky.model.JigsawModel.getQuads() may expose internal representation by returning JigsawModel.quads  At JigsawModel.java:[line 117]
M V EI: se.llbit.chunky.model.JigsawModel.getTextures() may expose internal representation by returning JigsawModel.textures  At JigsawModel.java:[line 122]
M V EI: se.llbit.chunky.model.TorchModel.getQuads() may expose internal representation by returning TorchModel.quadsGround  At TorchModel.java:[line 128]
M V EI: se.llbit.chunky.model.TorchModel.getTextures() may expose internal representation by returning TorchModel.textures  At TorchModel.java:[line 133]
M V EI: se.llbit.chunky.model.CakeWithCandleModel.getQuads() may expose internal representation by returning CakeWithCandleModel.quads  At CakeWithCandleModel.java:[line 132]
M V EI: se.llbit.chunky.model.CakeWithCandleModel.getTextures() may expose internal representation by returning CakeWithCandleModel.textures  At CakeWithCandleModel.java:[line 137]
M V EI: se.llbit.chunky.model.LanternModel.getQuads() may expose internal representation by returning LanternModel.quads  At LanternModel.java:[line 203]
M V EI: se.llbit.chunky.model.LanternModel.getTextures() may expose internal representation by returning LanternModel.textures  At LanternModel.java:[line 208]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.settings.UniformFogSettings at new se.llbit.chunky.ui.render.settings.UniformFogSettings() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At UniformFogSettings.java:[line 50]
M V EI: se.llbit.chunky.model.BigDripleafModel.getQuads() may expose internal representation by returning BigDripleafModel.quads  At BigDripleafModel.java:[line 311]
M V EI: se.llbit.chunky.model.BigDripleafModel.getTextures() may expose internal representation by returning BigDripleafModel.textures  At BigDripleafModel.java:[line 306]
M D SF: Switch statement found in new se.llbit.chunky.model.BigDripleafModel(String, String) where default case is missing  At BigDripleafModel.java:[lines 291-299]
M V EI: se.llbit.chunky.model.EndPortalFrameModel.getQuads() may expose internal representation by returning EndPortalFrameModel.quads  At EndPortalFrameModel.java:[line 151]
M V EI: se.llbit.chunky.model.EndPortalFrameModel.getTextures() may expose internal representation by returning EndPortalFrameModel.textures  At EndPortalFrameModel.java:[line 156]
M V EI: se.llbit.chunky.model.ButtonModel.getQuads() may expose internal representation by returning ButtonModel.quads  At ButtonModel.java:[line 89]
M V EI: se.llbit.chunky.model.ButtonModel.getTextures() may expose internal representation by returning ButtonModel.textures  At ButtonModel.java:[line 94]
M V EI: se.llbit.chunky.renderer.scene.Sun.getColor() may expose internal representation by returning Sun.color  At Sun.java:[line 514]
M V EI: se.llbit.chunky.renderer.scene.Sun.getApparentColor() may expose internal representation by returning Sun.apparentColor  At Sun.java:[line 518]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Sun.radius is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Sun.java:[line 125]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Sun.radiusCos is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Sun.java:[line 126]
M B PA: Primitive field se.llbit.chunky.renderer.scene.Sun.radiusSin is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At Sun.java:[line 127]
M V EI2: new se.llbit.chunky.entity.CalibratedSculkSensorAmethyst(Vector3, String, boolean, CalibratedSculkSensor) may expose internal representation by storing an externally mutable object into CalibratedSculkSensorAmethyst.block  At CalibratedSculkSensorAmethyst.java:[line 70]
M B CT: Exception thrown in class se.llbit.math.PackedOctree at new se.llbit.math.PackedOctree(int, long) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PackedOctree.java:[line 162]
M B PA: Primitive field se.llbit.math.PackedOctree.treeData is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At PackedOctree.java:[line 163]
M V EI: se.llbit.chunky.entity.BeaconBeam.getMaterials() may expose internal representation by returning BeaconBeam.materials  At BeaconBeam.java:[line 267]
M V EI: se.llbit.chunky.entity.BeaconBeam.getPose() may expose internal representation by returning BeaconBeam.pose  At BeaconBeam.java:[line 250]
M D SF: Switch statement found in se.llbit.chunky.entity.BeaconBeam.getColorFromBlock(Block) where one case falls through to the next case  At BeaconBeam.java:[lines 124-127]
M V EI: se.llbit.chunky.model.BambooModel.getTextures() may expose internal representation by returning BambooModel.textures  At BambooModel.java:[line 217]
M V EI: se.llbit.chunky.model.BambooModel.getQuads() may expose internal representation by returning BambooModel.quads  At BambooModel.java:[line 212]
M V EI2: new se.llbit.chunky.entity.StandingBanner(Vector3, int, JsonObject) may expose internal representation by storing an externally mutable object into StandingBanner.design  At StandingBanner.java:[line 158]
M D SF: Switch statement found in se.llbit.chunky.entity.StandingBanner.getPatternBitmap(String) where default case is missing  At StandingBanner.java:[lines 197-313]
M D SF: Switch statement found in se.llbit.chunky.entity.StandingBanner.getColor(int) where default case is missing  At StandingBanner.java:[lines 355-402]
M M LI: Incorrect lazy initialization of static field se.llbit.chunky.ui.controller.ResourcePackChooserController$PackListItem.DEFAULT in se.llbit.chunky.ui.controller.ResourcePackChooserController$PackListItem.getDefault()  At ResourcePackChooserController.java:[lines 465-466]
M V EI2: new se.llbit.chunky.entity.WallSignEntity(Vector3, JsonArray[], int, String) may expose internal representation by storing an externally mutable object into WallSignEntity.text  At WallSignEntity.java:[line 110]
M V EI: se.llbit.chunky.model.BellModel.getQuads() may expose internal representation by returning BellModel.quads  At BellModel.java:[line 382]
M V EI: se.llbit.chunky.model.BellModel.getTextures() may expose internal representation by returning BellModel.textures  At BellModel.java:[line 387]
M D SF: Switch statement found in new se.llbit.chunky.model.BellModel(String, String) where default case is missing  At BellModel.java:[lines 363-371]
M V EI: se.llbit.chunky.model.FlowerPotModel.getTextures() may expose internal representation by returning FlowerPotModel.textures  At FlowerPotModel.java:[line 627]
M V EI: se.llbit.chunky.model.FlowerPotModel.getQuads() may expose internal representation by returning FlowerPotModel.quads  At FlowerPotModel.java:[line 622]
M V EI: se.llbit.chunky.model.FlowerPotModel.getTints() may expose internal representation by returning FlowerPotModel.tints  At FlowerPotModel.java:[line 632]
M D SF: Switch statement found in new se.llbit.chunky.model.FlowerPotModel(FlowerPotModel$Kind) where default case is missing  At FlowerPotModel.java:[lines 530-613]
M V EI: se.llbit.chunky.model.BarrelModel.getTextures() may expose internal representation by returning BarrelModel.textures  At BarrelModel.java:[line 71]
M V EI: se.llbit.chunky.model.BarrelModel.getQuads() may expose internal representation by returning BarrelModel.quads  At BarrelModel.java:[line 66]
M V EI: se.llbit.chunky.model.ChainModel.getQuads() may expose internal representation by returning ChainModel.quads  At ChainModel.java:[line 58]
M V EI: se.llbit.chunky.model.ChainModel.getTextures() may expose internal representation by returning ChainModel.textures  At ChainModel.java:[line 63]
M V EI: se.llbit.chunky.model.RailModel.getQuads() may expose internal representation by returning RailModel.quads  At RailModel.java:[line 83]
M V EI: se.llbit.chunky.model.RailModel.getTextures() may expose internal representation by returning RailModel.textures  At RailModel.java:[line 88]
M V EI: se.llbit.chunky.model.FireModel.getTextures() may expose internal representation by returning FireModel.textures  At FireModel.java:[line 53]
M V EI: se.llbit.chunky.model.FireModel.getQuads() may expose internal representation by returning FireModel.quads  At FireModel.java:[line 48]
M V EI2: new se.llbit.chunky.ui.controller.RenderControlsFxController(ChunkyFxController, ToolPane, RenderCanvasFx, RenderManager) may expose internal representation by storing an externally mutable object into RenderControlsFxController.canvas  At RenderControlsFxController.java:[line 76]
M V EI: se.llbit.chunky.ui.controller.RenderControlsFxController.getCanvas() may expose internal representation by returning RenderControlsFxController.canvas  At RenderControlsFxController.java:[line 146]
M V EI2: new se.llbit.chunky.ui.controller.RenderControlsFxController(ChunkyFxController, ToolPane, RenderCanvasFx, RenderManager) may expose internal representation by storing an externally mutable object into RenderControlsFxController.toolPane  At RenderControlsFxController.java:[line 75]
M V EI2: new se.llbit.chunky.ui.controller.RenderControlsFxController(ChunkyFxController, ToolPane, RenderCanvasFx, RenderManager) may expose internal representation by storing an externally mutable object into RenderControlsFxController.renderManager  At RenderControlsFxController.java:[line 77]
M V EI2: new se.llbit.chunky.resources.texturepack.PaintingTexture(String, Texture) may expose internal representation by storing an externally mutable object into PaintingTexture.texture  At PaintingTexture.java:[line 38]
M V EI: se.llbit.chunky.model.CropsModel.getTextures() may expose internal representation by returning CropsModel.textures  At CropsModel.java:[line 55]
M V EI: se.llbit.chunky.model.CropsModel.getQuads() may expose internal representation by returning CropsModel.quads  At CropsModel.java:[line 50]
M V EI2: new se.llbit.chunky.entity.WallBanner(Vector3, int, JsonObject) may expose internal representation by storing an externally mutable object into WallBanner.design  At WallBanner.java:[line 119]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.right  At LargeChestTexture.java:[line 54]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.backLeft  At LargeChestTexture.java:[line 61]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.topRight  At LargeChestTexture.java:[line 56]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.topLeft  At LargeChestTexture.java:[line 55]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.bottomRight  At LargeChestTexture.java:[line 60]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.left  At LargeChestTexture.java:[line 53]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.frontLeft  At LargeChestTexture.java:[line 57]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.bottomLeft  At LargeChestTexture.java:[line 59]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.frontRight  At LargeChestTexture.java:[line 58]
M V EI2: new se.llbit.chunky.resources.texturepack.LargeChestTexture(String, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into LargeChestTexture.backRight  At LargeChestTexture.java:[line 62]
M D SF: Switch statement found in se.llbit.chunky.entity.LilyPadEntity.primitives(Vector3) where default case is missing  At LilyPadEntity.java:[lines 60-75]
M V EI: se.llbit.chunky.model.SmallDripleafModel.getQuads() may expose internal representation by returning SmallDripleafModel.quads  At SmallDripleafModel.java:[line 241]
M V EI: se.llbit.chunky.model.SmallDripleafModel.getTextures() may expose internal representation by returning SmallDripleafModel.textures  At SmallDripleafModel.java:[line 246]
M V EI: se.llbit.chunky.entity.Lectern.getBook() may expose internal representation by returning Lectern.book  At Lectern.java:[line 207]
M D SF: Switch statement found in se.llbit.chunky.entity.Lectern.createBookEntity(Vector3, String) where default case is missing  At Lectern.java:[lines 252-263]
M V EI: se.llbit.chunky.model.GlassPaneModel.getQuads() may expose internal representation by returning GlassPaneModel.quads  At GlassPaneModel.java:[line 154]
M V EI: se.llbit.chunky.model.GlassPaneModel.getTextures() may expose internal representation by returning GlassPaneModel.textures  At GlassPaneModel.java:[line 159]
M V EI: se.llbit.chunky.model.StonecutterModel.getTextures() may expose internal representation by returning StonecutterModel.textures  At StonecutterModel.java:[line 108]
M V EI: se.llbit.chunky.model.StonecutterModel.getQuads() may expose internal representation by returning StonecutterModel.quads  At StonecutterModel.java:[line 103]
H I Dm: Found reliance on default encoding in se.llbit.imageformats.tiff.TiffFileWriter.writeFooter(int, int, int): String.getBytes()  At TiffFileWriter.java:[line 215]
M B CT: Exception thrown in class se.llbit.imageformats.tiff.TiffFileWriter at new se.llbit.imageformats.tiff.TiffFileWriter(OutputStream) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At TiffFileWriter.java:[line 49]
M B CT: Exception thrown in class se.llbit.imageformats.tiff.TiffFileWriter at new se.llbit.imageformats.tiff.TiffFileWriter(File) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At TiffFileWriter.java:[line 61]
M V EI2: new se.llbit.chunky.block.legacy.LegacyBlockUtils$FinalizationStateCache(FinalizationState, Material[]) may expose internal representation by storing an externally mutable object into LegacyBlockUtils$FinalizationStateCache.cache  At LegacyBlockUtils.java:[line 60]
M V EI2: new se.llbit.chunky.block.legacy.LegacyBlockUtils$FinalizationStateCache(FinalizationState, Material[]) may expose internal representation by storing an externally mutable object into LegacyBlockUtils$FinalizationStateCache.state  At LegacyBlockUtils.java:[line 59]
M D SF: Switch statement found in se.llbit.math.Grid.load(DataInputStream, Scene) where one case falls through to the next case  At Grid.java:[lines 318-321]
M D SF: Switch statement found in se.llbit.math.Grid.load(DataInputStream, Scene) where default case is missing  At Grid.java:[lines 304-325]
M V EI2: new se.llbit.chunky.resources.texturepack.AnimatedTextureLoader(String, Texture) may expose internal representation by storing an externally mutable object into AnimatedTextureLoader.texture  At AnimatedTextureLoader.java:[line 39]
M V EI: se.llbit.chunky.model.LogModel.getQuads() may expose internal representation by returning LogModel.quads  At LogModel.java:[line 58]
M V EI: se.llbit.chunky.model.LogModel.getTextures() may expose internal representation by returning LogModel.textures  At LogModel.java:[line 63]
M V EI: se.llbit.chunky.renderer.scene.CameraPreset.getIcon() may expose internal representation by returning CameraPreset.icon  At CameraPreset.java:[line 128]
M V EI: se.llbit.chunky.model.Flowerbed.getTextures() may expose internal representation by returning Flowerbed.textures  At Flowerbed.java:[line 401]
M V EI: se.llbit.chunky.model.Flowerbed.getTints() may expose internal representation by returning Flowerbed.tints  At Flowerbed.java:[line 406]
M V EI: se.llbit.chunky.model.Flowerbed.getQuads() may expose internal representation by returning Flowerbed.quads  At Flowerbed.java:[line 396]
M D SF: Switch statement found in new se.llbit.chunky.model.Flowerbed(Texture, Texture, int, String) where default case is missing  At Flowerbed.java:[lines 380-388]
M D SF: Switch statement found in se.llbit.chunky.entity.WallCoralFanEntity.primitives(Vector3) where default case is missing  At WallCoralFanEntity.java:[lines 75-83]
M V EI: se.llbit.chunky.model.TrapdoorModel.getQuads() may expose internal representation by returning TrapdoorModel.quads  At TrapdoorModel.java:[line 204]
M V EI: se.llbit.chunky.model.TrapdoorModel.getTextures() may expose internal representation by returning TrapdoorModel.textures  At TrapdoorModel.java:[line 209]
M V EI2: new se.llbit.chunky.entity.Campfire(Campfire$Kind, Vector3, String, boolean, Block) may expose internal representation by storing an externally mutable object into Campfire.block  At Campfire.java:[line 289]
M D DLS: Dead store to rotatedWidth in se.llbit.chunky.entity.Campfire.rotateFire(Quad)  At Campfire.java:[line 257]
M V EI2: new se.llbit.chunky.resources.texturepack.RotatedTextureLoader(String, Texture) may expose internal representation by storing an externally mutable object into RotatedTextureLoader.texture  At RotatedTextureLoader.java:[line 37]
M V EI2: new se.llbit.chunky.resources.texturepack.IndexedTexture(int, Texture) may expose internal representation by storing an externally mutable object into IndexedTexture.texture  At IndexedTexture.java:[line 45]
M B CT: Exception thrown in class se.llbit.chunky.ui.dialogs.ResourcePackChooser at new se.llbit.chunky.ui.dialogs.ResourcePackChooser(Scene, TaskTracker) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ResourcePackChooser.java:[line 42]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.settings.SkymapSettings at new se.llbit.chunky.ui.render.settings.SkymapSettings() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At SkymapSettings.java:[line 53]
M V EI: se.llbit.chunky.model.LightningRodModel.getTextures() may expose internal representation by returning LightningRodModel.textures  At LightningRodModel.java:[line 133]
M V EI: se.llbit.chunky.model.LightningRodModel.getQuads() may expose internal representation by returning LightningRodModel.quads  At LightningRodModel.java:[line 128]
M V EI: se.llbit.chunky.model.DecoratedPotModel.getTextures() may expose internal representation by returning TopBottomOrientedTexturedBlockModel.textures  At DecoratedPotModel.java:[line 231]
M V EI: se.llbit.chunky.model.DecoratedPotModel.getQuads() may expose internal representation by returning TopBottomOrientedTexturedBlockModel.quads  At DecoratedPotModel.java:[line 226]
M V EI: se.llbit.chunky.block.legacy.blocks.LegacyFlowerPot.getNewTagWithBlockEntity(Tag, CompoundTag) may expose internal representation by returning se.llbit.chunky.block.legacy.UnfinalizedLegacyBlock.tag  At LegacyFlowerPot.java:[line 84]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.AdvancedTab at new se.llbit.chunky.ui.render.tabs.AdvancedTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At AdvancedTab.java:[line 86]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.SkyTab at new se.llbit.chunky.ui.render.tabs.SkyTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At SkyTab.java:[line 74]
M B CT: Exception thrown in class se.llbit.imageformats.pfm.PfmFileWriter at new se.llbit.imageformats.pfm.PfmFileWriter(File) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PfmFileWriter.java:[line 45]
M V EI: se.llbit.chunky.model.LeverModel.getTextures() may expose internal representation by returning LeverModel.textures  At LeverModel.java:[line 172]
M V EI: se.llbit.chunky.model.LeverModel.getQuads() may expose internal representation by returning LeverModel.quads  At LeverModel.java:[line 167]
M V EI: se.llbit.chunky.model.VineModel.getQuads() may expose internal representation by returning VineModel.quads  At VineModel.java:[line 108]
M V EI: se.llbit.chunky.model.VineModel.getTints() may expose internal representation by returning VineModel.tints  At VineModel.java:[line 118]
M V EI: se.llbit.chunky.model.VineModel.getTextures() may expose internal representation by returning VineModel.textures  At VineModel.java:[line 113]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.LightingTab at new se.llbit.chunky.ui.render.tabs.LightingTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At LightingTab.java:[line 69]
M V EI2: new se.llbit.chunky.resources.texturepack.SplitLargeChestTexture(String, SplitLargeChestTexture$Part, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into SplitLargeChestTexture.bottom  At SplitLargeChestTexture.java:[line 54]
M V EI2: new se.llbit.chunky.resources.texturepack.SplitLargeChestTexture(String, SplitLargeChestTexture$Part, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into SplitLargeChestTexture.front  At SplitLargeChestTexture.java:[line 57]
M V EI2: new se.llbit.chunky.resources.texturepack.SplitLargeChestTexture(String, SplitLargeChestTexture$Part, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into SplitLargeChestTexture.left  At SplitLargeChestTexture.java:[line 55]
M V EI2: new se.llbit.chunky.resources.texturepack.SplitLargeChestTexture(String, SplitLargeChestTexture$Part, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into SplitLargeChestTexture.top  At SplitLargeChestTexture.java:[line 53]
M V EI2: new se.llbit.chunky.resources.texturepack.SplitLargeChestTexture(String, SplitLargeChestTexture$Part, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into SplitLargeChestTexture.right  At SplitLargeChestTexture.java:[line 56]
M V EI2: new se.llbit.chunky.resources.texturepack.SplitLargeChestTexture(String, SplitLargeChestTexture$Part, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into SplitLargeChestTexture.back  At SplitLargeChestTexture.java:[line 58]
M B CT: Exception thrown in class se.llbit.chunky.resources.texturepack.AlternateTextures at new se.llbit.chunky.resources.texturepack.AlternateTextures(TextureLoader) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At AlternateTextures.java:[line 48]
M V EI2: new se.llbit.chunky.resources.texturepack.ChestTexture(String, ChestTexture$Layout, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into ChestTexture.back  At ChestTexture.java:[line 73]
M V EI2: new se.llbit.chunky.resources.texturepack.ChestTexture(String, ChestTexture$Layout, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into ChestTexture.lock  At ChestTexture.java:[line 67]
M V EI2: new se.llbit.chunky.resources.texturepack.ChestTexture(String, ChestTexture$Layout, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into ChestTexture.front  At ChestTexture.java:[line 72]
M V EI2: new se.llbit.chunky.resources.texturepack.ChestTexture(String, ChestTexture$Layout, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into ChestTexture.bottom  At ChestTexture.java:[line 69]
M V EI2: new se.llbit.chunky.resources.texturepack.ChestTexture(String, ChestTexture$Layout, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into ChestTexture.left  At ChestTexture.java:[line 70]
M V EI2: new se.llbit.chunky.resources.texturepack.ChestTexture(String, ChestTexture$Layout, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into ChestTexture.top  At ChestTexture.java:[line 68]
M V EI2: new se.llbit.chunky.resources.texturepack.ChestTexture(String, ChestTexture$Layout, Texture, Texture, Texture, Texture, Texture, Texture, Texture) may expose internal representation by storing an externally mutable object into ChestTexture.right  At ChestTexture.java:[line 71]
M V EI2: new se.llbit.chunky.resources.texturepack.PaintingBackTexture(String, Texture) may expose internal representation by storing an externally mutable object into PaintingBackTexture.texture  At PaintingBackTexture.java:[line 43]
M P UPM: Private method se.llbit.math.BigPackedOctree.nodeEquals(long, Octree$Node) is never called  At BigPackedOctree.java:[lines 283-290]
M V EI: se.llbit.chunky.ui.render.tabs.GeneralTab.getTabContent() may expose internal representation by returning GeneralTab.wrapper  At GeneralTab.java:[line 195]
H I Dm: Found reliance on default encoding in se.llbit.chunky.ui.render.tabs.GeneralTab.lambda$initialize$4(ActionEvent): String.getBytes()  At GeneralTab.java:[line 216]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.GeneralTab at new se.llbit.chunky.ui.render.tabs.GeneralTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At GeneralTab.java:[line 106]
M B RV: Exceptional return value of java.io.File.mkdir() ignored in se.llbit.chunky.main.CommandLineOptions.lambda$new$18(List)  At CommandLineOptions.java:[line 419]
H I Dm: Found reliance on default encoding in se.llbit.chunky.main.CommandLineOptions.writeSceneJson(File, JsonObject): new java.io.PrintStream(OutputStream)  At CommandLineOptions.java:[line 593]
H I Dm: Found reliance on default encoding in se.llbit.chunky.main.CommandLineOptions.lambda$new$16(List): String.getBytes()  At CommandLineOptions.java:[line 351]
M B CT: Exception thrown in class se.llbit.chunky.main.CommandLineOptions at new se.llbit.chunky.main.CommandLineOptions(String[]) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At CommandLineOptions.java:[line 333]
M B FS: Format string should use %n rather than \n in se.llbit.chunky.ui.ChunkMap.getChunk(MouseEvent)  At ChunkMap.java:[line 491]
M B FS: Format string should use %n rather than \n in se.llbit.chunky.ui.ChunkMap.getChunk(MouseEvent)  At ChunkMap.java:[line 494]
M V EI2: new se.llbit.chunky.ui.ChunkMap(WorldMapLoader, ChunkyFxController, MapView, ChunkSelectionTracker, Canvas, Canvas) may expose internal representation by storing an externally mutable object into ChunkMap.mapLoader  At ChunkMap.java:[line 131]
M V EI2: new se.llbit.chunky.ui.ChunkMap(WorldMapLoader, ChunkyFxController, MapView, ChunkSelectionTracker, Canvas, Canvas) may expose internal representation by storing an externally mutable object into ChunkMap.canvas  At ChunkMap.java:[line 135]
M V EI2: new se.llbit.chunky.ui.ChunkMap(WorldMapLoader, ChunkyFxController, MapView, ChunkSelectionTracker, Canvas, Canvas) may expose internal representation by storing an externally mutable object into ChunkMap.mapView  At ChunkMap.java:[line 133]
M V EI2: new se.llbit.chunky.ui.ChunkMap(WorldMapLoader, ChunkyFxController, MapView, ChunkSelectionTracker, Canvas, Canvas) may expose internal representation by storing an externally mutable object into ChunkMap.chunkSelection  At ChunkMap.java:[line 134]
M V EI2: new se.llbit.chunky.ui.ChunkMap(WorldMapLoader, ChunkyFxController, MapView, ChunkSelectionTracker, Canvas, Canvas) may expose internal representation by storing an externally mutable object into ChunkMap.mapOverlay  At ChunkMap.java:[line 136]
M D SF: Switch statement found in se.llbit.chunky.ui.ChunkMap.onKeyPressed(KeyEvent) where default case is missing  At ChunkMap.java:[lines 429-434]
M D SF: Switch statement found in se.llbit.chunky.ui.ChunkMap.onKeyReleased(KeyEvent) where default case is missing  At ChunkMap.java:[lines 440-445]
M B PA: Primitive field se.llbit.chunky.ui.ChunkMap.lastX is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At ChunkMap.java:[line 451]
M B PA: Primitive field se.llbit.chunky.ui.ChunkMap.lastY is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At ChunkMap.java:[line 452]
M B PA: Primitive field se.llbit.chunky.ui.ChunkMap.clickX is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At ChunkMap.java:[line 511]
M B PA: Primitive field se.llbit.chunky.ui.ChunkMap.clickY is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At ChunkMap.java:[line 512]
M V EI: se.llbit.chunky.model.PitcherPlantBottomModel.getQuads() may expose internal representation by returning PitcherPlantBottomModel.quads  At PitcherPlantBottomModel.java:[line 168]
M V EI: se.llbit.chunky.model.PitcherPlantBottomModel.getTextures() may expose internal representation by returning PitcherPlantBottomModel.textures  At PitcherPlantBottomModel.java:[line 173]
M B CT: Exception thrown in class se.llbit.chunky.resources.texturepack.AllTextures at new se.llbit.chunky.resources.texturepack.AllTextures(TextureLoader) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At AllTextures.java:[line 29]
M V EI: se.llbit.chunky.model.ComposterModel.getTextures() may expose internal representation by returning ComposterModel.textures  At ComposterModel.java:[line 210]
M V EI: se.llbit.chunky.model.ComposterModel.getQuads() may expose internal representation by returning ComposterModel.quads  At ComposterModel.java:[line 205]
M V EI: se.llbit.chunky.model.SunFlowerModel.getTextures() may expose internal representation by returning SunFlowerModel.textures  At SunFlowerModel.java:[line 85]
M V EI: se.llbit.chunky.model.SunFlowerModel.getQuads() may expose internal representation by returning SunFlowerModel.quads  At SunFlowerModel.java:[line 80]
M V EI: se.llbit.chunky.model.SnowModel.getTextures() may expose internal representation by returning SnowModel.textures  At SnowModel.java:[line 78]
M V EI: se.llbit.chunky.model.SnowModel.getQuads() may expose internal representation by returning SnowModel.quads  At SnowModel.java:[line 73]
M V EI: se.llbit.chunky.model.PistonExtensionModel.getTextures() may expose internal representation by returning PistonExtensionModel.textures  At PistonExtensionModel.java:[line 118]
M V EI: se.llbit.chunky.model.PistonExtensionModel.getQuads() may expose internal representation by returning PistonExtensionModel.quads  At PistonExtensionModel.java:[line 113]
M V EI: se.llbit.chunky.model.FrogspawnModel.getQuads() may expose internal representation by returning FrogspawnModel.quads  At FrogspawnModel.java:[line 20]
M V EI: se.llbit.chunky.model.FrogspawnModel.getTextures() may expose internal representation by returning FrogspawnModel.textures  At FrogspawnModel.java:[line 25]
M V EI: se.llbit.chunky.model.TurtleEggModel.getTextures() may expose internal representation by returning TurtleEggModel.textures  At TurtleEggModel.java:[line 192]
M V EI: se.llbit.chunky.model.TurtleEggModel.getQuads() may expose internal representation by returning TurtleEggModel.quads  At TurtleEggModel.java:[line 187]
M V EI: se.llbit.chunky.model.CocoaPlantModel.getTextures() may expose internal representation by returning CocoaPlantModel.textures  At CocoaPlantModel.java:[line 171]
M V EI: se.llbit.chunky.model.CocoaPlantModel.getQuads() may expose internal representation by returning CocoaPlantModel.quads  At CocoaPlantModel.java:[line 166]
M V EI: se.llbit.chunky.model.SculkSensorModel.getTextures() may expose internal representation by returning SculkSensorModel.textures  At SculkSensorModel.java:[line 134]
M V EI: se.llbit.chunky.model.SculkSensorModel.getQuads() may expose internal representation by returning SculkSensorModel.quads  At SculkSensorModel.java:[line 129]
H B CN: se.llbit.chunky.renderer.scene.LegacyWaterShader defines clone() but doesn't implement Cloneable  At LegacyWaterShader.java:[line 31]
M V EI: se.llbit.chunky.model.SeaPickleModel.getQuads() may expose internal representation by returning SeaPickleModel.quads  At SeaPickleModel.java:[line 741]
M V EI: se.llbit.chunky.model.SeaPickleModel.getTextures() may expose internal representation by returning SeaPickleModel.textures  At SeaPickleModel.java:[line 746]
M V EI: se.llbit.chunky.model.HopperModel.getTextures() may expose internal representation by returning HopperModel.tex  At HopperModel.java:[line 460]
M V EI: se.llbit.chunky.model.HopperModel.getQuads() may expose internal representation by returning HopperModel.quads  At HopperModel.java:[line 455]
M V EI: se.llbit.chunky.model.RedstoneRepeaterModel.getQuads() may expose internal representation by returning RedstoneRepeaterModel.quads  At RedstoneRepeaterModel.java:[line 184]
M V EI: se.llbit.chunky.model.RedstoneRepeaterModel.getTextures() may expose internal representation by returning RedstoneRepeaterModel.textures  At RedstoneRepeaterModel.java:[line 189]
M B CT: Exception thrown in class se.llbit.chunky.ui.dialogs.Credits at new se.llbit.chunky.ui.dialogs.Credits() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At Credits.java:[line 33]
M D SF: Switch statement found in se.llbit.chunky.block.MinecraftBlockProvider.structureBlock(Tag) where default case is missing  At MinecraftBlockProvider.java:[lines 3461-3472]
M V EI: se.llbit.chunky.model.TripwireModel.getTextures() may expose internal representation by returning TripwireModel.textures  At TripwireModel.java:[line 385]
M V EI: se.llbit.chunky.model.TripwireModel.getQuads() may expose internal representation by returning TripwireModel.quads  At TripwireModel.java:[line 380]
M V EI: se.llbit.chunky.model.AttachedStemModel.getQuads() may expose internal representation by returning AttachedStemModel.quads  At AttachedStemModel.java:[line 51]
M V EI: se.llbit.chunky.model.AttachedStemModel.getTextures() may expose internal representation by returning AttachedStemModel.textures  At AttachedStemModel.java:[line 56]
M V EI: se.llbit.chunky.model.AttachedStemModel.getTints() may expose internal representation by returning AttachedStemModel.tints  At AttachedStemModel.java:[line 61]
M V EI: se.llbit.chunky.model.RedstoneWireModel.getTextures() may expose internal representation by returning RedstoneWireModel.textures  At RedstoneWireModel.java:[line 168]
M V EI: se.llbit.chunky.model.RedstoneWireModel.getQuads() may expose internal representation by returning RedstoneWireModel.quads  At RedstoneWireModel.java:[line 163]
M V EI: se.llbit.chunky.model.RedstoneWireModel.getTints() may expose internal representation by returning RedstoneWireModel.tints  At RedstoneWireModel.java:[line 173]
M V EI: se.llbit.chunky.model.CakeModel.getTextures() may expose internal representation by returning CakeModel.textures  At CakeModel.java:[line 79]
M V EI: se.llbit.chunky.model.CakeModel.getQuads() may expose internal representation by returning CakeModel.quads  At CakeModel.java:[line 74]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.TexturesTab at new se.llbit.chunky.ui.render.tabs.TexturesTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At TexturesTab.java:[line 62]
M V EI: se.llbit.chunky.model.LadderModel.getQuads() may expose internal representation by returning LadderModel.quads  At LadderModel.java:[line 53]
M V EI: se.llbit.chunky.model.LadderModel.getTextures() may expose internal representation by returning LadderModel.textures  At LadderModel.java:[line 58]
M V EI: se.llbit.chunky.model.SculkVeinModel.getQuads() may expose internal representation by returning SculkVeinModel.quads  At SculkVeinModel.java:[line 55]
M V EI: se.llbit.chunky.model.SculkVeinModel.getTextures() may expose internal representation by returning SculkVeinModel.textures  At SculkVeinModel.java:[line 60]
M V EI: se.llbit.chunky.model.SculkShriekerModel.getTextures() may expose internal representation by returning SculkShriekerModel.textures  At SculkShriekerModel.java:[line 140]
M V EI: se.llbit.chunky.model.SculkShriekerModel.getQuads() may expose internal representation by returning SculkShriekerModel.quads  At SculkShriekerModel.java:[line 135]
M V EI2: new se.llbit.chunky.world.region.RegionParser(WorldMapLoader, RegionQueue, MapView) may expose internal representation by storing an externally mutable object into RegionParser.queue  At RegionParser.java:[line 49]
M V EI2: new se.llbit.chunky.world.region.RegionParser(WorldMapLoader, RegionQueue, MapView) may expose internal representation by storing an externally mutable object into RegionParser.mapView  At RegionParser.java:[line 50]
M V EI2: new se.llbit.chunky.world.region.RegionParser(WorldMapLoader, RegionQueue, MapView) may expose internal representation by storing an externally mutable object into RegionParser.mapLoader  At RegionParser.java:[line 48]
M V EI: se.llbit.chunky.model.SnifferEggModel.getQuads() may expose internal representation by returning SnifferEggModel.quads  At SnifferEggModel.java:[line 79]
M V EI: se.llbit.chunky.model.MangroveRootsModel.getQuads() may expose internal representation by returning MangroveRootsModel.quads  At MangroveRootsModel.java:[line 117]
M V EI: se.llbit.chunky.model.MangroveRootsModel.getTextures() may expose internal representation by returning MangroveRootsModel.textures  At MangroveRootsModel.java:[line 122]
M V EI: se.llbit.chunky.model.EndPortalModel.getQuads() may expose internal representation by returning EndPortalModel.quads  At EndPortalModel.java:[line 42]
M V EI: se.llbit.chunky.model.EndPortalModel.getTextures() may expose internal representation by returning EndPortalModel.textures  At EndPortalModel.java:[line 47]
M V EI: se.llbit.chunky.model.GlowLichenModel.getTextures() may expose internal representation by returning GlowLichenModel.textures  At GlowLichenModel.java:[line 60]
M V EI: se.llbit.chunky.model.GlowLichenModel.getQuads() may expose internal representation by returning GlowLichenModel.quads  At GlowLichenModel.java:[line 55]
M V EI2: new se.llbit.chunky.ui.elements.GradientEditor(SkyTab) may expose internal representation by storing an externally mutable object into GradientEditor.sky  At GradientEditor.java:[line 93]
M V EI2: se.llbit.chunky.ui.elements.GradientEditor.setGradient(List) may expose internal representation by storing an externally mutable object into GradientEditor.gradient  At GradientEditor.java:[line 398]
H I Dm: Found reliance on default encoding in se.llbit.chunky.ui.elements.GradientEditor.importGradient(String): String.getBytes()  At GradientEditor.java:[line 197]
M B CT: Exception thrown in class se.llbit.chunky.ui.elements.GradientEditor at new se.llbit.chunky.ui.elements.GradientEditor(SkyTab) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At GradientEditor.java:[line 92]
M V EI: se.llbit.chunky.model.TripwireHookModel.getTextures() may expose internal representation by returning TripwireHookModel.textures  At TripwireHookModel.java:[line 643]
M V EI: se.llbit.chunky.model.TripwireHookModel.getQuads() may expose internal representation by returning TripwireHookModel.quads  At TripwireHookModel.java:[line 638]
M V EI2: new se.llbit.chunky.resources.ChiseledBookshelfTexture(Texture, Texture, boolean, boolean, boolean, boolean, boolean, boolean) may expose internal representation by storing an externally mutable object into ChiseledBookshelfTexture.empty  At ChiseledBookshelfTexture.java:[line 16]
M V EI2: new se.llbit.chunky.resources.ChiseledBookshelfTexture(Texture, Texture, boolean, boolean, boolean, boolean, boolean, boolean) may expose internal representation by storing an externally mutable object into ChiseledBookshelfTexture.full  At ChiseledBookshelfTexture.java:[line 17]
M V EI: se.llbit.chunky.model.MangrovePropaguleModel.getTextures() may expose internal representation by returning MangrovePropaguleModel.textures  At MangrovePropaguleModel.java:[line 637]
M V EI: se.llbit.chunky.model.MangrovePropaguleModel.getQuads() may expose internal representation by returning MangrovePropaguleModel.quads  At MangrovePropaguleModel.java:[line 632]
M V EI: se.llbit.chunky.model.ScaffoldingModel.getTextures() may expose internal representation by returning ScaffoldingModel.textures  At ScaffoldingModel.java:[line 325]
M V EI: se.llbit.chunky.model.ScaffoldingModel.getQuads() may expose internal representation by returning ScaffoldingModel.quads  At ScaffoldingModel.java:[line 320]
M V EI: se.llbit.chunky.model.IronBarsModel.getTextures() may expose internal representation by returning IronBarsModel.textures  At IronBarsModel.java:[line 116]
M V EI: se.llbit.chunky.model.IronBarsModel.getQuads() may expose internal representation by returning IronBarsModel.quads  At IronBarsModel.java:[line 111]
M V EI: se.llbit.chunky.model.EndRodModel.getTextures() may expose internal representation by returning EndRodModel.textures  At EndRodModel.java:[line 94]
M V EI: se.llbit.chunky.model.EndRodModel.getQuads() may expose internal representation by returning EndRodModel.quads  At EndRodModel.java:[line 89]
M B FS: Format string should use %n rather than \n in se.llbit.chunky.renderer.export.PngExportFormat.writePanoramaMetaData(Scene, PngFileWriter)  At PngExportFormat.java:[line 86]
M V EI: se.llbit.chunky.model.ObserverModel.getQuads() may expose internal representation by returning ObserverModel.quads  At ObserverModel.java:[line 98]
M V EI: se.llbit.chunky.model.ObserverModel.getTextures() may expose internal representation by returning ObserverModel.textures  At ObserverModel.java:[line 103]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.CameraTab at new se.llbit.chunky.ui.render.tabs.CameraTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At CameraTab.java:[line 84]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.EntitiesTab at new se.llbit.chunky.ui.render.tabs.EntitiesTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At EntitiesTab.java:[line 142]
M V EI: se.llbit.chunky.model.BrewingStandModel.getQuads() may expose internal representation by returning BrewingStandModel.quads  At BrewingStandModel.java:[line 230]
M V EI: se.llbit.chunky.model.BrewingStandModel.getTextures() may expose internal representation by returning BrewingStandModel.tex  At BrewingStandModel.java:[line 235]
M D IM: Check for oddness that won't work for negative numbers in se.llbit.chunky.renderer.renderdump.FloatingPointCompressorDumpFormat.writeSamples(DataOutputStream, Scene, IntConsumer)  At FloatingPointCompressorDumpFormat.java:[line 84]
M D IM: Check for oddness that won't work for negative numbers in se.llbit.chunky.renderer.renderdump.FloatingPointCompressorDumpFormat.decompress(InputStream, int, PixelConsumer, IntConsumer)  At FloatingPointCompressorDumpFormat.java:[line 130]
M V EI2: new se.llbit.chunky.ui.RenderCanvasFx(ChunkyFxController, Scene, RenderManager) may expose internal representation by storing an externally mutable object into RenderCanvasFx.renderManager  At RenderCanvasFx.java:[line 92]
M V EI2: new se.llbit.chunky.ui.RenderCanvasFx(ChunkyFxController, Scene, RenderManager) may expose internal representation by storing an externally mutable object into RenderCanvasFx.renderScene  At RenderCanvasFx.java:[line 91]
M V EI2: se.llbit.chunky.ui.RenderCanvasFx.setRenderListener(RenderStatusListener) may expose internal representation by storing an externally mutable object into RenderCanvasFx.renderListener  At RenderCanvasFx.java:[line 438]
M D SF: Switch statement found in se.llbit.chunky.ui.RenderCanvasFx.lambda$new$16(Scene, KeyEvent) where default case is missing  At RenderCanvasFx.java:[lines 307-346]
M V EI: se.llbit.chunky.model.DragonEggModel.getTextures() may expose internal representation by returning DragonEggModel.textures  At DragonEggModel.java:[line 283]
M V EI: se.llbit.chunky.model.DragonEggModel.getQuads() may expose internal representation by returning DragonEggModel.quads  At DragonEggModel.java:[line 278]
M D RCN: Redundant nullcheck of data, which is known to be non-null in se.llbit.chunky.world.ImposterCubicChunk.getChunkData(Mutable, BlockPalette, BiomePalette, int, int)  Redundant null check at ImposterCubicChunk.java:[line 178]
M D RCN: Redundant nullcheck of data, which is known to be non-null in se.llbit.chunky.world.ImposterCubicChunk.loadChunk(Mutable, int, int)  Redundant null check at ImposterCubicChunk.java:[line 65]
M V EI2: new se.llbit.chunky.world.ImposterCubicChunk(ChunkPosition, Dimension) may expose internal representation by storing an externally mutable object into ImposterCubicChunk.dimension  At ImposterCubicChunk.java:[line 35]
M B CT: Exception thrown in class se.llbit.chunky.world.ImposterCubicChunk at new se.llbit.chunky.world.ImposterCubicChunk(ChunkPosition, Dimension) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ImposterCubicChunk.java:[line 34]
M V EI: se.llbit.chunky.model.ComparatorModel.getTextures() may expose internal representation by returning ComparatorModel.textures  At ComparatorModel.java:[line 159]
M V EI: se.llbit.chunky.model.ComparatorModel.getQuads() may expose internal representation by returning ComparatorModel.quads  At ComparatorModel.java:[line 154]
M V EI: se.llbit.chunky.model.ChestModel.getQuads() may expose internal representation by returning ChestModel.quads  At ChestModel.java:[line 260]
M V EI: se.llbit.chunky.model.ChestModel.getTextures() may expose internal representation by returning ChestModel.textures  At ChestModel.java:[line 265]
M V EI: se.llbit.chunky.model.CactusModel.getTextures() may expose internal representation by returning CactusModel.textures  At CactusModel.java:[line 63]
M V EI: se.llbit.chunky.model.CactusModel.getQuads() may expose internal representation by returning CactusModel.quads  At CactusModel.java:[line 58]
M B RR: se.llbit.chunky.world.region.ImposterCubicRegion$CubicRegion112.getCubeTagsInColumn(int, int, Set) ignores result of java.io.RandomAccessFile.read(byte[])  At ImposterCubicRegion.java:[line 472]
H B CN: se.llbit.chunky.renderer.scene.SimplexWaterShader defines clone() but doesn't implement Cloneable  At SimplexWaterShader.java:[lines 72-77]
M B PA: Primitive field se.llbit.chunky.renderer.scene.SimplexWaterShader.iterations is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SimplexWaterShader.java:[line 34]
M B PA: Primitive field se.llbit.chunky.renderer.scene.SimplexWaterShader.baseFrequency is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SimplexWaterShader.java:[line 35]
M B PA: Primitive field se.llbit.chunky.renderer.scene.SimplexWaterShader.baseAmplitude is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SimplexWaterShader.java:[line 36]
M B PA: Primitive field se.llbit.chunky.renderer.scene.SimplexWaterShader.animationSpeed is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At SimplexWaterShader.java:[line 37]
M V EI2: se.llbit.chunky.renderer.DefaultRenderManager.setSceneProvider(SceneProvider) may expose internal representation by storing an externally mutable object into DefaultRenderManager.sceneProvider  At DefaultRenderManager.java:[line 497]
M V EI: se.llbit.chunky.model.ChorusPlantModel.getTextures() may expose internal representation by returning ChorusPlantModel.textures  At ChorusPlantModel.java:[line 132]
M V EI: se.llbit.chunky.model.ChorusPlantModel.getQuads() may expose internal representation by returning ChorusPlantModel.quads  At ChorusPlantModel.java:[line 127]
M V EI: se.llbit.chunky.model.StemModel.getQuads() may expose internal representation by returning StemModel.quads  At StemModel.java:[line 36]
M V EI: se.llbit.chunky.model.StemModel.getTints() may expose internal representation by returning StemModel.tints  At StemModel.java:[line 46]
M V EI: se.llbit.chunky.model.StemModel.getTextures() may expose internal representation by returning StemModel.textures  At StemModel.java:[line 41]
M V EI: se.llbit.chunky.model.ConduitModel.getQuads() may expose internal representation by returning ConduitModel.quads  At ConduitModel.java:[line 55]
M V EI: se.llbit.chunky.model.ConduitModel.getTextures() may expose internal representation by returning ConduitModel.textures  At ConduitModel.java:[line 60]
M V EI: se.llbit.chunky.model.PitcherPlantTopModel.getTextures() may expose internal representation by returning PitcherPlantTopModel.textures  At PitcherPlantTopModel.java:[line 96]
M V EI: se.llbit.chunky.model.PitcherPlantTopModel.getQuads() may expose internal representation by returning PitcherPlantTopModel.quads  At PitcherPlantTopModel.java:[line 91]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.WaterTab at new se.llbit.chunky.ui.render.tabs.WaterTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At WaterTab.java:[line 80]
M D SF: Switch statement found in se.llbit.chunky.model.AABBModel.intersectFace(Ray, Scene, Texture, AABBModel$UVMapping) where default case is missing  At AABBModel.java:[lines 153-172]
M B CT: Exception thrown in class se.llbit.chunky.ui.render.tabs.PostprocessingTab at new se.llbit.chunky.ui.render.tabs.PostprocessingTab() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PostprocessingTab.java:[line 52]
M D UwF: Unwritten public or protected field: se.llbit.util.mojangapi.MinecraftProfile$Property.name  At MinecraftProfile.java:[line 19]
M D UwF: Unwritten public or protected field: se.llbit.util.mojangapi.MinecraftProfile$Property.value  At MinecraftProfile.java:[line 20]
M D UwF: Unwritten public or protected field: se.llbit.util.mojangapi.MinecraftProfile$Textures$SkinUrl.metadata  At MinecraftSkin.java:[line 25]
M D UwF: Unwritten public or protected field: se.llbit.util.mojangapi.MinecraftProfile$Textures$SkinUrl.url  At MinecraftSkin.java:[line 21]
M D UwF: Unwritten public or protected field: se.llbit.util.mojangapi.MinecraftProfile$Textures$SkinUrl$Metadata.model  At MinecraftSkin.java:[line 26]
M C UwF: Field only ever set to null: se.llbit.chunky.resources.ResourcePackBiomeLoader$BiomeEffects.foliage_color  At ResourcePackBiomeLoader.java:[line 50]
M C UwF: Field only ever set to null: se.llbit.chunky.resources.ResourcePackBiomeLoader$BiomeEffects.grass_color  At ResourcePackBiomeLoader.java:[line 51]
M C UwF: Field only ever set to null: se.llbit.chunky.resources.ResourcePackBiomeLoader$BiomeEffects.grass_color_modifier  At ResourcePackBiomeLoader.java:[line 53]
M C UwF: Field only ever set to null: se.llbit.chunky.resources.ResourcePackBiomeLoader$BiomeEffects.water_color  At ResourcePackBiomeLoader.java:[line 52]
M D UrF: Unread public/protected field: se.llbit.chunky.world.PlayerEntityData.mainHand  At PlayerEntityData.java:[line 36]
M P UrF: Unread field: se.llbit.chunky.ui.render.tabs.WaterTab.renderControls  At WaterTab.java:[line 84]
M D UrF: Unread public/protected field: se.llbit.chunky.block.Block.invisible  At Block.java:[line 34]
M D UrF: Unread public/protected field: se.llbit.math.AABB.surfaceArea  At AABB.java:[line 49]
M P UrF: Unread field: se.llbit.chunky.renderer.scene.Sun.zenith_x  At Sun.java:[line 363]
M P UrF: Unread field: se.llbit.chunky.renderer.scene.Sun.f0_Y  At Sun.java:[line 367]
M P UrF: Unread field: se.llbit.chunky.renderer.scene.Sun.zenith_y  At Sun.java:[line 364]
M D UuF: Unused public or protected field: se.llbit.util.mojangapi.MinecraftProfile$Textures$CapeUrl.url  In MinecraftProfile.java
M P SS: Unread field: se.llbit.chunky.ui.ChunkMap.MAX_CHUNK_UPDATE_RATE; should this field be static?  At ChunkMap.java:[line 78]
M P UrF: Unread field: se.llbit.chunky.renderer.scene.Sun.f0_y  At Sun.java:[line 366]
M D UrF: Unread public/protected field: se.llbit.chunky.world.PlayerEntityData.shield  At PlayerEntityData.java:[line 35]
M P UrF: Unread field: se.llbit.chunky.renderer.scene.Sun.f0_x  At Sun.java:[line 365]
M P UrF: Unread field: se.llbit.chunky.world.Dimension.timestamp  At Dimension.java:[line 56]
M D UrF: Unread public/protected field: se.llbit.chunky.world.model.Cube.name  At JsonModel.java:[line 143]
M D UrF: Unread public/protected field: se.llbit.chunky.renderer.scene.Sun.radiusSin  At Sun.java:[line 127]
M D NP: Read of unwritten public or protected field model in se.llbit.util.mojangapi.MinecraftSkin.getPlayerModel()  At MinecraftSkin.java:[line 26]
M V MS: se.llbit.chunky.renderer.renderdump.RenderDump.DUMP_FORMAT_MAGIC_NUMBER should be package protected  At RenderDump.java:[line 39]
M V MS: se.llbit.chunky.model.AnvilModel.topTexture should be package protected  At AnvilModel.java:[line 45]
H V MS: se.llbit.chunky.world.ExtraMaterials.idMap is a mutable collection  At ExtraMaterials.java:[line 30]
M V MS: se.llbit.chunky.model.LightBlockModel.aabb should be package protected  At LightBlockModel.java:[line 10]
H V MS: se.llbit.chunky.world.MaterialStore.collections is a mutable collection  At MaterialStore.java:[line 27]
H V MS: se.llbit.chunky.world.MaterialStore.blockIds is a mutable collection  At MaterialStore.java:[line 28]
M V MS: se.llbit.chunky.world.biome.Biomes.biomes is a mutable collection which should be package protected  At Biomes.java:[line 44]
H V MS: se.llbit.chunky.world.biome.Biomes.biomesPrePalette is a mutable array  At Biomes.java:[line 155]
H V MS: se.llbit.chunky.resources.Texture.black isn't final but should be  At Texture.java:[line 57]
H V MS: se.llbit.chunky.resources.Texture.chiseledBookshelfCombinations is a mutable array  At Texture.java:[line 1185]
M V MS: se.llbit.chunky.resources.ResourcePackLoader.PACK_LOADER_FACTORIES is a mutable collection which should be package protected  At ResourcePackLoader.java:[line 35]
M V MS: se.llbit.chunky.model.SpriteModel.quads should be package protected  At SpriteModel.java:[line 27]
H V MS: se.llbit.chunky.block.BlockSpec.blockProviders is a mutable collection  At BlockSpec.java:[line 15]
H V MS: se.llbit.chunky.renderer.scene.Sky.skies is a mutable collection  At Sky.java:[line 175]
M V MS: se.llbit.chunky.entity.SignEntity.sides should be both final and package protected  At SignEntity.java:[line 103]
M V MS: se.llbit.chunky.model.DoorModel.faces should be package protected  At DoorModel.java:[line 27]
H V MS: se.llbit.chunky.renderer.scene.Sun.texture isn't final but should be  At Sun.java:[line 91]
M V MS: se.llbit.chunky.entity.Lectern.tex should be package protected  At Lectern.java:[line 137]
M V MS: se.llbit.chunky.ui.controller.CreditsController.plugins is a mutable collection which should be package protected  At CreditsController.java:[line 92]
M V MS: se.llbit.chunky.model.VineModel.topQuads should be package protected  At VineModel.java:[line 64]
M V MS: se.llbit.chunky.model.SnowModel.model should be package protected  At SnowModel.java:[line 23]
M V MS: se.llbit.chunky.resources.TexturePackLoader.ALL_TEXTURES is a mutable collection which should be package protected  At TexturePackLoader.java:[line 32]
M V MS: se.llbit.chunky.model.QuadModel.FULL_BLOCK_QUADS should be package protected  At QuadModel.java:[line 51]
H V MS: se.llbit.chunky.world.material.CloudMaterial.color is a mutable array  At CloudMaterial.java:[line 24]
M V MS: se.llbit.chunky.model.ChestModel.single should be package protected  At ChestModel.java:[line 31]
M V MS: se.llbit.chunky.model.ChestModel.left should be package protected  At ChestModel.java:[line 82]
M V MS: se.llbit.chunky.model.ChestModel.right should be package protected  At ChestModel.java:[line 124]
M V MS: se.llbit.chunky.model.ChestModel.variants should be package protected  At ChestModel.java:[line 224]
H V MS: se.llbit.chunky.renderer.DefaultRenderManager.renderers is a mutable collection  At DefaultRenderManager.java:[line 60]
H V MS: se.llbit.chunky.renderer.DefaultRenderManager.previewRenderers is a mutable collection  At DefaultRenderManager.java:[line 67]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.sunSamplingStrategy; locked 83% of time  Unsynchronized access at Scene.java:[line 449]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.worldOctree; locked 76% of time  Unsynchronized access at Scene.java:[line 420]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.worldDimension; locked 87% of time  Unsynchronized access at Scene.java:[line 415]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.useCustomWaterColor; locked 54% of time  Unsynchronized access at Scene.java:[line 445]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.animationTime; locked 55% of time  Unsynchronized access at Scene.java:[line 494]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.finalizeBuffer; locked 62% of time  Unsynchronized access at Scene.java:[line 2467]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.sppTarget; locked 57% of time  Unsynchronized access at Scene.java:[line 1912]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.emittersEnabled; locked 60% of time  Unsynchronized access at Scene.java:[line 450]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.transparentSky; locked 55% of time  Unsynchronized access at Scene.java:[line 455]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.waterTexture; locked 61% of time  Unsynchronized access at Scene.java:[line 2506]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.additionalData; locked 50% of time  Unsynchronized access at Scene.java:[line 499]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.waterOctree; locked 60% of time  Unsynchronized access at Scene.java:[line 3299]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.waterPlaneHeight; locked 53% of time  Unsynchronized access at Scene.java:[line 464]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.waterPlaneChunkClip; locked 50% of time  Unsynchronized access at Scene.java:[line 1857]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.worldPath; locked 90% of time  Unsynchronized access at Scene.java:[line 414]
M M IS: Inconsistent synchronization of se.llbit.chunky.map.MapBuffer.width; locked 80% of time  Unsynchronized access at MapBuffer.java:[line 193]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Camera.projectionListener; locked 50% of time  Unsynchronized access at Camera.java:[line 729]
M M IS: Inconsistent synchronization of se.llbit.chunky.world.region.MCRegion.regionFileTime; locked 66% of time  Unsynchronized access at MCRegion.java:[line 440]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.yMin; locked 70% of time  Unsynchronized access at Fog.java:[line 144]
M M IS: Inconsistent synchronization of se.llbit.chunky.map.MapBuffer.pixels; locked 80% of time  Unsynchronized access at MapBuffer.java:[line 193]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.waterPlaneEnabled; locked 55% of time  Unsynchronized access at Scene.java:[line 463]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.octreeImplementation; locked 66% of time  Unsynchronized access at Scene.java:[line 492]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Camera.directionListener; locked 50% of time  Unsynchronized access at Camera.java:[line 721]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.palette; locked 83% of time  Unsynchronized access at Scene.java:[line 910]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.foliageTexture; locked 81% of time  Unsynchronized access at Scene.java:[line 2477]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.chunks; locked 64% of time  Unsynchronized access at Scene.java:[line 432]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.resetReason; locked 55% of time  Unsynchronized access at Scene.java:[line 474]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.mode; locked 89% of time  Unsynchronized access at Scene.java:[line 3107]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.grassTexture; locked 81% of time  Unsynchronized access at Scene.java:[line 425]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.previewRenderer; locked 50% of time  Unsynchronized access at Scene.java:[line 497]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.rayDepth; locked 70% of time  Unsynchronized access at Scene.java:[line 1652]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.emitterGrid; locked 86% of time  Unsynchronized access at Scene.java:[line 434]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.waterPlaneOffsetEnabled; locked 50% of time  Unsynchronized access at Scene.java:[line 465]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.finalized; locked 75% of time  Unsynchronized access at Scene.java:[line 2151]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.transmissivityCap; locked 50% of time  Unsynchronized access at Scene.java:[line 3419]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.saveSnapshots; locked 57% of time  Unsynchronized access at Scene.java:[line 2544]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.exposure; locked 60% of time  Unsynchronized access at Scene.java:[line 610]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.loadedWorld; locked 84% of time  Unsynchronized access at Scene.java:[line 413]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.yMax; locked 75% of time  Unsynchronized access at Fog.java:[line 144]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.backBuffer; locked 57% of time  Unsynchronized access at Scene.java:[line 2444]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Camera.positionListener; locked 75% of time  Unsynchronized access at Camera.java:[line 272]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Camera.pitch; locked 57% of time  Unsynchronized access at Camera.java:[line 575]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.waterShading; locked 66% of time  Unsynchronized access at Scene.java:[line 467]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.hideUnknownBlocks; locked 57% of time  Unsynchronized access at Scene.java:[line 469]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Camera.yaw; locked 62% of time  Unsynchronized access at Camera.java:[line 635]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.frontBuffer; locked 85% of time  Unsynchronized access at Scene.java:[line 482]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.renderer; locked 50% of time  Unsynchronized access at Scene.java:[line 496]
M M IS: Inconsistent synchronization of se.llbit.chunky.renderer.scene.Scene.biomeStructureImplementation; locked 66% of time  Unsynchronized access at Scene.java:[line 3288]
SpotBugs ended with exit code 1

BUILD SUCCESSFUL in 57s
12 actionable tasks: 12 executed
